<?php

namespace ContainerI4ij0pE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCatalogPromotionAnnouncerInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\Bundle\CoreBundle\CatalogPromotion\Announcer\CatalogPromotionAnnouncerInterface' shared service.
     *
     * @return \Sylius\Bundle\CoreBundle\CatalogPromotion\Announcer\CatalogPromotionAnnouncer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Sylius/Bundle/CoreBundle/CatalogPromotion/Announcer/CatalogPromotionAnnouncerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Bundle/CoreBundle/CatalogPromotion/Announcer/CatalogPromotionAnnouncer.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Bundle/CoreBundle/Calculator/DelayStampCalculatorInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Bundle/CoreBundle/Calculator/DelayStampCalculator.php';

        $a = ($container->privates['debug.traced.sylius.event_bus'] ?? $container->getDebug_Traced_Sylius_EventBusService());

        if (isset($container->services['Sylius\\Bundle\\CoreBundle\\CatalogPromotion\\Announcer\\CatalogPromotionAnnouncerInterface'])) {
            return $container->services['Sylius\\Bundle\\CoreBundle\\CatalogPromotion\\Announcer\\CatalogPromotionAnnouncerInterface'];
        }

        return $container->services['Sylius\\Bundle\\CoreBundle\\CatalogPromotion\\Announcer\\CatalogPromotionAnnouncerInterface'] = new \Sylius\Bundle\CoreBundle\CatalogPromotion\Announcer\CatalogPromotionAnnouncer($a, ($container->services['Sylius\\Bundle\\CoreBundle\\Calculator\\DelayStampCalculatorInterface'] ?? ($container->services['Sylius\\Bundle\\CoreBundle\\Calculator\\DelayStampCalculatorInterface'] = new \Sylius\Bundle\CoreBundle\Calculator\DelayStampCalculator())), ($container->privates['Sylius\\Calendar\\Provider\\DateTimeProviderInterface'] ?? ($container->privates['Sylius\\Calendar\\Provider\\DateTimeProviderInterface'] = new \Sylius\Calendar\Provider\Calendar())));
    }
}
