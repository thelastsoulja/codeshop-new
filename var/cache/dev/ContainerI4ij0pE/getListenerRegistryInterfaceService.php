<?php

namespace ContainerI4ij0pE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getListenerRegistryInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\Bundle\FixturesBundle\Listener\ListenerRegistryInterface' shared service.
     *
     * @return \Sylius\Bundle\FixturesBundle\Listener\ListenerRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/ListenerRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/ListenerRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/Definition/ConfigurationInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/ListenerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/AbstractListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/BeforeSuiteListenerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/ORMPurgerListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/AfterFixtureListenerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Bundle/CoreBundle/Fixture/Listener/CatalogPromotionExecutorListener.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Bundle/CoreBundle/Fixture/Listener/ImagesPurgerListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/BeforeFixtureListenerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/fixtures-bundle/src/Listener/LoggerListener.php';

        $container->services['Sylius\\Bundle\\FixturesBundle\\Listener\\ListenerRegistryInterface'] = $instance = new \Sylius\Bundle\FixturesBundle\Listener\ListenerRegistry();

        $instance->addListener(new \Sylius\Bundle\FixturesBundle\Listener\ORMPurgerListener(($container->services['doctrine'] ?? $container->getDoctrineService())));
        $instance->addListener(new \Sylius\Bundle\CoreBundle\Fixture\Listener\CatalogPromotionExecutorListener(($container->services['Sylius\\Bundle\\CoreBundle\\CatalogPromotion\\Processor\\AllProductVariantsCatalogPromotionsProcessorInterface'] ?? $container->load('getAllProductVariantsCatalogPromotionsProcessorInterfaceService')), ($container->services['sylius.repository.catalog_promotion'] ?? $container->load('getSylius_Repository_CatalogPromotionService')), ($container->services['messenger.default_bus'] ?? $container->getMessenger_DefaultBusService()), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->services['sylius.catalog_promotion.criteria.enabled'] ?? ($container->services['sylius.catalog_promotion.criteria.enabled'] = new \Sylius\Bundle\PromotionBundle\Criteria\Enabled()));
            yield 1 => ($container->services['sylius.catalog_promotion.criteria.date_range'] ?? $container->load('getSylius_CatalogPromotion_Criteria_DateRangeService'));
        }, 2)));
        $instance->addListener(new \Sylius\Bundle\CoreBundle\Fixture\Listener\ImagesPurgerListener(($container->services['.container.private.filesystem'] ?? ($container->services['.container.private.filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), (\dirname(__DIR__, 4).'/public/media/image')));
        $instance->addListener(($container->services['sylius_fixtures.listener.suite_loader_listener'] ?? $container->load('getSyliusFixtures_Listener_SuiteLoaderListenerService')));
        $instance->addListener(new \Sylius\Bundle\FixturesBundle\Listener\LoggerListener(($container->services['sylius_fixtures.logger'] ?? $container->load('getSyliusFixtures_LoggerService'))));

        return $instance;
    }
}
