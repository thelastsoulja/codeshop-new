<?php

namespace ContainerI4ij0pE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUpdateCartHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\Bundle\ApiBundle\CommandHandler\Checkout\UpdateCartHandler' shared service.
     *
     * @return \Sylius\Bundle\ApiBundle\CommandHandler\Checkout\UpdateCartHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Bundle/ApiBundle/CommandHandler/Checkout/UpdateCartHandler.php';

        $a = ($container->services['Sylius\\Bundle\\ApiBundle\\Modifier\\OrderAddressModifierInterface'] ?? $container->load('getOrderAddressModifierInterfaceService'));

        if (isset($container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Checkout\\UpdateCartHandler'])) {
            return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Checkout\\UpdateCartHandler'];
        }
        $b = ($container->services['Sylius\\Bundle\\ApiBundle\\Assigner\\OrderPromotionCodeAssignerInterface'] ?? $container->load('getOrderPromotionCodeAssignerInterfaceService'));

        if (isset($container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Checkout\\UpdateCartHandler'])) {
            return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Checkout\\UpdateCartHandler'];
        }

        return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Checkout\\UpdateCartHandler'] = new \Sylius\Bundle\ApiBundle\CommandHandler\Checkout\UpdateCartHandler(($container->services['sylius.repository.order'] ?? $container->getSylius_Repository_OrderService()), $a, $b, ($container->services['Sylius\\Bundle\\CoreBundle\\Resolver\\CustomerResolverInterface'] ?? $container->load('getCustomerResolverInterfaceService')), ($container->services['Sylius\\Bundle\\ApiBundle\\Context\\UserContextInterface'] ?? $container->getUserContextInterfaceService()));
    }
}
