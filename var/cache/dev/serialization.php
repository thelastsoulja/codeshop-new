<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Sylius_Bundle_CoreBundle_Message_Admin_Account_RequestResetPasswordEmail' => 0,
'Sylius_Bundle_CoreBundle_Message_Admin_Account_ResetPassword' => 1,
'Sylius_Component_Core_Model_Address' => 2,
'Sylius_Component_Addressing_Model_AddressLogEntry' => 3,
'Sylius_Component_Order_Model_Adjustment' => 4,
'Sylius_Component_Core_Model_AdminUser' => 5,
'Sylius_Component_Core_Model_AvatarImage' => 6,
'Sylius_Component_Promotion_Model_CatalogPromotion' => 7,
'Sylius_Component_Promotion_Model_CatalogPromotionAction' => 8,
'Sylius_Component_Promotion_Model_CatalogPromotionScope' => 9,
'Sylius_Component_Promotion_Model_CatalogPromotionTranslation' => 10,
'Sylius_Component_Core_Model_Channel' => 11,
'Sylius_Component_Core_Model_ChannelPriceHistoryConfig' => 12,
'Sylius_Component_Core_Model_ChannelPricing' => 13,
'Sylius_Component_Core_Model_ChannelPricingLogEntry' => 14,
'Sylius_Bundle_ApiBundle_Command_Account_ChangeShopUserPassword' => 15,
'Sylius_Bundle_ApiBundle_Command_Account_ChangePaymentMethod' => 16,
'Sylius_Bundle_ApiBundle_Command_Account_RegisterShopUser' => 17,
'Sylius_Bundle_ApiBundle_Command_Account_RequestResetPasswordToken' => 18,
'Sylius_Bundle_ApiBundle_Command_Account_ResendVerificationEmail' => 19,
'Sylius_Bundle_ApiBundle_Command_Account_ResetPassword' => 20,
'Sylius_Bundle_ApiBundle_Command_Account_VerifyCustomerAccount' => 21,
'Sylius_Bundle_ApiBundle_Command_Catalog_AddProductReview' => 22,
'Sylius_Bundle_ApiBundle_Command_Cart_AddItemToCart' => 23,
'Sylius_Bundle_ApiBundle_Command_Cart_ChangeItemQuantityInCart' => 24,
'Sylius_Bundle_ApiBundle_Command_Cart_RemoveItemFromCart' => 25,
'Sylius_Bundle_ApiBundle_Command_Checkout_ChoosePaymentMethod' => 26,
'Sylius_Bundle_ApiBundle_Command_Checkout_ChooseShippingMethod' => 27,
'Sylius_Bundle_ApiBundle_Command_Checkout_CompleteOrder' => 28,
'Sylius_Bundle_ApiBundle_Command_Checkout_ShipShipment' => 29,
'Sylius_Bundle_ApiBundle_Command_Checkout_UpdateCart' => 30,
'Sylius_Bundle_ApiBundle_Command_Promotion_GeneratePromotionCoupon' => 31,
'Sylius_Bundle_ApiBundle_Command_SendContactRequest' => 32,
'Sylius_Component_Addressing_Model_Country' => 33,
'Sylius_Component_Currency_Model_Currency' => 34,
'Sylius_Component_Core_Model_Customer' => 35,
'Sylius_Component_Customer_Model_CustomerGroup' => 36,
'Sylius_Component_Core_Customer_Statistics_CustomerStatistics' => 37,
'Sylius_Component_Currency_Model_ExchangeRate' => 38,
'Sylius_Bundle_PayumBundle_Model_GatewayConfig' => 39,
'Sylius_Component_Locale_Model_Locale' => 40,
'Sylius_Component_Core_Model_Order' => 41,
'Sylius_Component_Core_Model_OrderItem' => 42,
'Sylius_Component_Core_Model_OrderItemUnit' => 43,
'Sylius_Component_Core_Model_Payment' => 44,
'Sylius_Component_Core_Model_PaymentMethod' => 45,
'Sylius_Component_Payment_Model_PaymentMethodTranslation' => 46,
'Sylius_Component_Core_Customer_Statistics_PerChannelCustomerStatistics' => 47,
'Sylius_Component_Core_Model_Product' => 48,
'Sylius_Component_Product_Model_ProductAssociation' => 49,
'Sylius_Component_Product_Model_ProductAssociationType' => 50,
'Sylius_Component_Product_Model_ProductAssociationTypeTranslation' => 51,
'Sylius_Component_Product_Model_ProductAttribute' => 52,
'Sylius_Component_Product_Model_ProductAttributeTranslation' => 53,
'Sylius_Component_Product_Model_ProductAttributeValue' => 54,
'Sylius_Component_Core_Model_ProductImage' => 55,
'Sylius_Component_Product_Model_ProductOption' => 56,
'Sylius_Component_Product_Model_ProductOptionTranslation' => 57,
'Sylius_Component_Product_Model_ProductOptionValue' => 58,
'Sylius_Component_Product_Model_ProductOptionValueTranslation' => 59,
'Sylius_Component_Core_Model_ProductReview' => 60,
'Sylius_Component_Core_Model_ProductTaxon' => 61,
'Sylius_Component_Product_Model_ProductTranslation' => 62,
'Sylius_Component_Core_Model_ProductVariant' => 63,
'Sylius_Component_Product_Model_ProductVariantTranslation' => 64,
'Sylius_Component_Core_Model_Promotion' => 65,
'Sylius_Component_Promotion_Model_PromotionAction' => 66,
'Sylius_Component_Core_Model_PromotionCoupon' => 67,
'Sylius_Component_Promotion_Model_PromotionRule' => 68,
'Sylius_Component_Promotion_Model_PromotionTranslation' => 69,
'Sylius_Component_Addressing_Model_Province' => 70,
'Sylius_Component_Core_Model_Shipment' => 71,
'Sylius_Component_Shipping_Model_ShippingCategory' => 72,
'Sylius_Component_Core_Model_ShippingMethod' => 73,
'Sylius_Component_Shipping_Model_ShippingMethodRule' => 74,
'Sylius_Component_Shipping_Model_ShippingMethodTranslation' => 75,
'Sylius_Component_Core_Model_ShopBillingData' => 76,
'Sylius_Component_Core_Model_ShopUser' => 77,
'Sylius_Component_Taxation_Model_TaxCategory' => 78,
'Sylius_Component_Taxation_Model_TaxRate' => 79,
'Sylius_Component_Core_Model_Taxon' => 80,
'Sylius_Component_Core_Model_TaxonImage' => 81,
'Sylius_Component_Taxonomy_Model_TaxonTranslation' => 82,
'Sylius_Component_Addressing_Model_Zone' => 83,
'Sylius_Component_Addressing_Model_ZoneMember' => 84,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\CoreBundle\\Message\\Admin\\Account\\RequestResetPasswordEmail',
                    'email',
                ],
                'attributesMetadata' => [
                    [
                        'email' => $o[1],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:reset_password:create',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\CoreBundle\\Message\\Admin\\Account\\ResetPassword',
                    'resetPasswordToken',
                    'newPassword',
                    'confirmNewPassword',
                ],
                'attributesMetadata' => [
                    [
                        'resetPasswordToken' => $o[1],
                        'newPassword' => $o[2],
                        'confirmNewPassword' => $o[3],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:reset_password:update',
                    ],
                    [
                        'admin:reset_password:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Address',
                    'customer',
                    'id',
                    'firstName',
                    'lastName',
                    'phoneNumber',
                    'company',
                    'countryCode',
                    'provinceCode',
                    'provinceName',
                    'street',
                    'city',
                    'postcode',
                    'createdAt',
                    'updatedAt',
                    'fullName',
                ],
                'attributesMetadata' => [
                    [
                        'customer' => $o[1],
                        'id' => $o[2],
                        'firstName' => $o[3],
                        'lastName' => $o[4],
                        'phoneNumber' => $o[5],
                        'company' => $o[6],
                        'countryCode' => $o[7],
                        'provinceCode' => $o[8],
                        'provinceName' => $o[9],
                        'street' => $o[10],
                        'city' => $o[11],
                        'postcode' => $o[12],
                        'createdAt' => $o[13],
                        'updatedAt' => $o[14],
                        'fullName' => $o[15],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:address:read',
                    ],
                    [
                        'admin:address:read',
                        'shop:address:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:address:read',
                        'admin:address:update',
                        'admin:order:read',
                        'shop:address:create',
                        'shop:address:read',
                        'shop:address:update',
                        'shop:cart:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\AddressLogEntry',
                    'id',
                    'action',
                    'loggedAt',
                    'objectId',
                    'objectClass',
                    'version',
                    'data',
                    'username',
                    'logged_at',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'action' => $o[2],
                        'loggedAt' => $o[3],
                        'objectId' => $o[4],
                        'objectClass' => $o[5],
                        'version' => $o[6],
                        'data' => $o[7],
                        'username' => $o[8],
                        'logged_at' => $o[9],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:address:log_entry:read',
                    ],
                    6 => [
                        'admin:address:log_entry:read',
                    ],
                    [
                        'admin:address:log_entry:read',
                    ],
                    9 => [
                        'admin:address:log_entry:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Order\\Model\\Adjustment',
                    'id',
                    'order',
                    'orderItem',
                    'orderItemUnit',
                    'type',
                    'label',
                    'amount',
                    'neutral',
                    'locked',
                    'originCode',
                    'details',
                    'createdAt',
                    'updatedAt',
                    'adjustable',
                    'charge',
                    'credit',
                    'order_item',
                    'order_item_unit',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'order' => $o[2],
                        'orderItem' => $o[3],
                        'orderItemUnit' => $o[4],
                        'type' => $o[5],
                        'label' => $o[6],
                        'amount' => $o[7],
                        'neutral' => $o[8],
                        'locked' => $o[9],
                        'originCode' => $o[10],
                        'details' => $o[11],
                        'createdAt' => $o[12],
                        'updatedAt' => $o[13],
                        'adjustable' => $o[14],
                        'charge' => $o[15],
                        'credit' => $o[16],
                        'order_item' => $o[17],
                        'order_item_unit' => $o[18],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                    ],
                    5 => [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                    ],
                    17 => [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                    ],
                    [
                        'admin:adjustment:read',
                        'shop:adjustment:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\AdminUser',
                    'firstName',
                    'lastName',
                    'localeCode',
                    'avatar',
                    'id',
                    'username',
                    'usernameCanonical',
                    'salt',
                    'password',
                    'plainPassword',
                    'lastLogin',
                    'emailVerificationToken',
                    'passwordResetToken',
                    'passwordRequestedAt',
                    'verifiedAt',
                    'locked',
                    'expiresAt',
                    'credentialsExpireAt',
                    'roles',
                    'oauthAccounts',
                    'email',
                    'emailCanonical',
                    'encoderName',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'image',
                    'equalTo',
                    'userIdentifier',
                    'credentialsNonExpired',
                    'accountNonExpired',
                    'accountNonLocked',
                    'role',
                    'passwordRequestNonExpired',
                    'verified',
                    'oAuthAccounts',
                    'passwordHasherName',
                    'expired',
                ],
                'attributesMetadata' => [
                    [
                        'firstName' => $o[1],
                        'lastName' => $o[2],
                        'localeCode' => $o[3],
                        'avatar' => $o[4],
                        'id' => $o[5],
                        'username' => $o[6],
                        'usernameCanonical' => $o[7],
                        'salt' => $o[8],
                        'password' => $o[9],
                        'plainPassword' => $o[10],
                        'lastLogin' => $o[11],
                        'emailVerificationToken' => $o[12],
                        'passwordResetToken' => $o[13],
                        'passwordRequestedAt' => $o[14],
                        'verifiedAt' => $o[15],
                        'locked' => $o[16],
                        'expiresAt' => $o[17],
                        'credentialsExpireAt' => $o[18],
                        'roles' => $o[19],
                        'oauthAccounts' => $o[20],
                        'email' => $o[21],
                        'emailCanonical' => $o[22],
                        'encoderName' => $o[23],
                        'createdAt' => $o[24],
                        'updatedAt' => $o[25],
                        'enabled' => $o[26],
                        'image' => $o[27],
                        'equalTo' => $o[28],
                        'userIdentifier' => $o[29],
                        'credentialsNonExpired' => $o[30],
                        'accountNonExpired' => $o[31],
                        'accountNonLocked' => $o[32],
                        'role' => $o[33],
                        'passwordRequestNonExpired' => $o[34],
                        'verified' => $o[35],
                        'oAuthAccounts' => $o[36],
                        'passwordHasherName' => $o[37],
                        'expired' => $o[38],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:admin_user:read',
                        'admin:admin_user:create',
                        'admin:admin_user:update',
                    ],
                    [
                        'admin:admin_user:read',
                        'admin:admin_user:create',
                        'admin:admin_user:update',
                    ],
                    [
                        'admin:admin_user:read',
                        'admin:admin_user:create',
                        'admin:admin_user:update',
                    ],
                    [
                        'admin:admin_user:read',
                    ],
                    [
                        'admin:admin_user:read',
                    ],
                    [
                        'admin:admin_user:read',
                        'admin:admin_user:create',
                        'admin:admin_user:update',
                    ],
                    10 => [
                        'admin:admin_user:create',
                        'admin:admin_user:update',
                    ],
                    [
                        'admin:admin_user:read',
                    ],
                    15 => [
                        'admin:admin_user:read',
                    ],
                    21 => [
                        'admin:admin_user:read',
                        'admin:admin_user:create',
                        'admin:admin_user:update',
                    ],
                    24 => [
                        'admin:admin_user:read',
                    ],
                    [
                        'admin:admin_user:read',
                    ],
                    [
                        'admin:admin_user:read',
                        'admin:admin_user:create',
                        'admin:admin_user:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\AvatarImage',
                    'id',
                    'type',
                    'file',
                    'path',
                    'owner',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'file' => $o[3],
                        'path' => $o[4],
                        'owner' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:avatar_image:read',
                    ],
                    4 => [
                        'admin:avatar_image:read',
                    ],
                    [
                        'admin:avatar_image:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\CatalogPromotion',
                    'id',
                    'name',
                    'code',
                    'startDate',
                    'endDate',
                    'priority',
                    'exclusive',
                    'state',
                    'scopes',
                    'actions',
                    'enabled',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'label',
                    'description',
                    'translation',
                    'scope',
                    'action',
                    'channels',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'code' => $o[3],
                        'startDate' => $o[4],
                        'endDate' => $o[5],
                        'priority' => $o[6],
                        'exclusive' => $o[7],
                        'state' => $o[8],
                        'scopes' => $o[9],
                        'actions' => $o[10],
                        'enabled' => $o[11],
                        'translations' => $o[12],
                        'translationsCache' => $o[13],
                        'currentLocale' => $o[14],
                        'currentTranslation' => $o[15],
                        'fallbackLocale' => $o[16],
                        'label' => $o[17],
                        'description' => $o[18],
                        'translation' => $o[19],
                        'scope' => $o[20],
                        'action' => $o[21],
                        'channels' => $o[22],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                        'admin:product_variant:read',
                        'shop:catalog_promotion:read',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:product_variant:read',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                        'admin:catalog_promotion:read',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    17 => [
                        'shop:catalog_promotion:read',
                    ],
                    22 => [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\CatalogPromotionAction',
                    'id',
                    'type',
                    'configuration',
                    'catalogPromotion',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'configuration' => $o[3],
                        'catalogPromotion' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:catalog_promotion:read',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\CatalogPromotionScope',
                    'id',
                    'type',
                    'configuration',
                    'catalogPromotion',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'configuration' => $o[3],
                        'catalogPromotion' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:catalog_promotion:read',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\CatalogPromotionTranslation',
                    'id',
                    'label',
                    'description',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'label' => $o[2],
                        'description' => $o[3],
                        'locale' => $o[4],
                        'translatable' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:catalog_promotion:read',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:read',
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                    [
                        'admin:catalog_promotion:create',
                        'admin:catalog_promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Channel',
                    'baseCurrency',
                    'defaultLocale',
                    'defaultTaxZone',
                    'taxCalculationStrategy',
                    'currencies',
                    'locales',
                    'countries',
                    'themeName',
                    'contactEmail',
                    'contactPhoneNumber',
                    'skippingShippingStepAllowed',
                    'skippingPaymentStepAllowed',
                    'accountVerificationRequired',
                    'shippingAddressInCheckoutRequired',
                    'shopBillingData',
                    'menuTaxon',
                    'channelPriceHistoryConfig',
                    'id',
                    'code',
                    'name',
                    'description',
                    'hostname',
                    'color',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'currency',
                    'locale',
                    'country',
                ],
                'attributesMetadata' => [
                    [
                        'baseCurrency' => $o[1],
                        'defaultLocale' => $o[2],
                        'defaultTaxZone' => $o[3],
                        'taxCalculationStrategy' => $o[4],
                        'currencies' => $o[5],
                        'locales' => $o[6],
                        'countries' => $o[7],
                        'themeName' => $o[8],
                        'contactEmail' => $o[9],
                        'contactPhoneNumber' => $o[10],
                        'skippingShippingStepAllowed' => $o[11],
                        'skippingPaymentStepAllowed' => $o[12],
                        'accountVerificationRequired' => $o[13],
                        'shippingAddressInCheckoutRequired' => $o[14],
                        'shopBillingData' => $o[15],
                        'menuTaxon' => $o[16],
                        'channelPriceHistoryConfig' => $o[17],
                        'id' => $o[18],
                        'code' => $o[19],
                        'name' => $o[20],
                        'description' => $o[21],
                        'hostname' => $o[22],
                        'color' => $o[23],
                        'createdAt' => $o[24],
                        'updatedAt' => $o[25],
                        'enabled' => $o[26],
                        'currency' => $o[27],
                        'locale' => $o[28],
                        'country' => $o[29],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:channel:read',
                        'admin:channel:create',
                        'shop:channel:read',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                        'shop:channel:read',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                        'shop:channel:read',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                        'shop:channel:read',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    19 => [
                        'admin:channel:read',
                        'admin:channel:create',
                        'shop:channel:read',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                        'shop:channel:read',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                    26 => [
                        'admin:channel:read',
                        'admin:channel:create',
                        'admin:channel:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ChannelPriceHistoryConfig',
                    'id',
                    'lowestPriceForDiscountedProductsCheckingPeriod',
                    'lowestPriceForDiscountedProductsVisible',
                    'taxonsExcludedFromShowingLowestPrice',
                    'taxonExcludedFromShowingLowestPrice',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'lowestPriceForDiscountedProductsCheckingPeriod' => $o[2],
                        'lowestPriceForDiscountedProductsVisible' => $o[3],
                        'taxonsExcludedFromShowingLowestPrice' => $o[4],
                        'taxonExcludedFromShowingLowestPrice' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:channel_price_history_config:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel_price_history_config:update',
                        'admin:channel_price_history_config:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel_price_history_config:update',
                        'admin:channel_price_history_config:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel_price_history_config:update',
                        'admin:channel_price_history_config:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ChannelPricing',
                    'id',
                    'channelCode',
                    'productVariant',
                    'price',
                    'originalPrice',
                    'minimumPrice',
                    'lowestPriceBeforeDiscount',
                    'appliedPromotions',
                    'priceReduced',
                    'promotionApplied',
                    'exclusiveCatalogPromotionApplied',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'channelCode' => $o[2],
                        'productVariant' => $o[3],
                        'price' => $o[4],
                        'originalPrice' => $o[5],
                        'minimumPrice' => $o[6],
                        'lowestPriceBeforeDiscount' => $o[7],
                        'appliedPromotions' => $o[8],
                        'priceReduced' => $o[9],
                        'promotionApplied' => $o[10],
                        'exclusiveCatalogPromotionApplied' => $o[11],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                    ],
                    4 => [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                    ],
                    [
                        'admin:product_variant:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ChannelPricingLogEntry',
                    'id',
                    'channelPricing',
                    'loggedAt',
                    'price',
                    'originalPrice',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'channelPricing' => $o[2],
                        'loggedAt' => $o[3],
                        'price' => $o[4],
                        'originalPrice' => $o[5],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:channel_pricing_log_entry:read',
                    ],
                    [
                        'admin:channel_pricing_log_entry:read',
                    ],
                    [
                        'admin:channel_pricing_log_entry:read',
                    ],
                    [
                        'admin:channel_pricing_log_entry:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangeShopUserPassword',
                    'shopUserId',
                    'newPassword',
                    'confirmNewPassword',
                    'currentPassword',
                ],
                'attributesMetadata' => [
                    [
                        'shopUserId' => $o[1],
                        'newPassword' => $o[2],
                        'confirmNewPassword' => $o[3],
                        'currentPassword' => $o[4],
                    ],
                ],
                'groups' => [
                    2 => [
                        'shop:customer:password:update',
                    ],
                    [
                        'shop:customer:password:update',
                    ],
                    [
                        'shop:customer:password:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ChangePaymentMethod',
                    'orderTokenValue',
                    'paymentId',
                    'paymentMethodCode',
                    'subresourceId',
                    'subresourceIdAttributeKey',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'paymentId' => $o[2],
                        'paymentMethodCode' => $o[3],
                        'subresourceId' => $o[4],
                        'subresourceIdAttributeKey' => $o[5],
                    ],
                ],
                'groups' => [
                    3 => [
                        'shop:order:account:change_payment_method',
                    ],
                ],
                'serializedName' => [
                    3 => 'paymentMethod',
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RegisterShopUser',
                    'firstName',
                    'lastName',
                    'email',
                    'password',
                    'subscribedToNewsletter',
                    'channelCode',
                    'localeCode',
                ],
                'attributesMetadata' => [
                    [
                        'firstName' => $o[1],
                        'lastName' => $o[2],
                        'email' => $o[3],
                        'password' => $o[4],
                        'subscribedToNewsletter' => $o[5],
                        'channelCode' => $o[6],
                        'localeCode' => $o[7],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:customer:create',
                    ],
                    [
                        'shop:customer:create',
                    ],
                    [
                        'shop:customer:create',
                    ],
                    [
                        'shop:customer:create',
                    ],
                    [
                        'shop:customer:create',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Account\\RequestResetPasswordToken',
                    'email',
                    'channelCode',
                    'localeCode',
                ],
                'attributesMetadata' => [
                    [
                        'email' => $o[1],
                        'channelCode' => $o[2],
                        'localeCode' => $o[3],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:reset_password:create',
                    ],
                    3 => [
                        'shop:reset_password:create',
                    ],
                ],
                'serializedName' => [
                    3 => 'locale',
                ],
            ],
        ],
        $o[0],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ResendVerificationEmail',
                    'shopUserId',
                    'channelCode',
                    'localeCode',
                ],
                'attributesMetadata' => [
                    [
                        'shopUserId' => $o[1],
                        'channelCode' => $o[2],
                        'localeCode' => $o[3],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:resend_verification_email:create',
                    ],
                    [
                        'shop:resend_verification_email:create',
                    ],
                    [
                        'shop:resend_verification_email:create',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Account\\ResetPassword',
                    'resetPasswordToken',
                    'newPassword',
                    'confirmNewPassword',
                ],
                'attributesMetadata' => [
                    [
                        'resetPasswordToken' => $o[1],
                        'newPassword' => $o[2],
                        'confirmNewPassword' => $o[3],
                    ],
                ],
                'groups' => [
                    2 => [
                        'shop:reset_password:update',
                    ],
                    [
                        'shop:reset_password:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Account\\VerifyCustomerAccount',
                    'token',
                    'localeCode',
                    'channelCode',
                ],
                'attributesMetadata' => [
                    [
                        'token' => $o[1],
                        'localeCode' => $o[2],
                        'channelCode' => $o[3],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:account_verification:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Catalog\\AddProductReview',
                    'title',
                    'rating',
                    'comment',
                    'productCode',
                    'email',
                ],
                'attributesMetadata' => [
                    [
                        'title' => $o[1],
                        'rating' => $o[2],
                        'comment' => $o[3],
                        'productCode' => $o[4],
                        'email' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:product_review:create',
                        'shop:product_review:read',
                    ],
                    [
                        'shop:product_review:create',
                        'shop:product_review:read',
                    ],
                    [
                        'shop:product_review:create',
                        'shop:product_review:read',
                    ],
                    [
                        'shop:product_review:create',
                        'shop:product_review:read',
                    ],
                    [
                        'shop:product_review:create',
                        'shop:product_review:read',
                    ],
                ],
                'serializedName' => [
                    4 => 'product',
                ],
            ],
        ],
        $o[0],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\AddItemToCart',
                    'orderTokenValue',
                    'productVariantCode',
                    'quantity',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'productVariantCode' => $o[2],
                        'quantity' => $o[3],
                    ],
                ],
                'groups' => [
                    2 => [
                        'shop:cart:add_item',
                    ],
                    [
                        'shop:cart:add_item',
                    ],
                ],
                'serializedName' => [
                    2 => 'productVariant',
                ],
            ],
        ],
        $o[0],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\ChangeItemQuantityInCart',
                    'orderTokenValue',
                    'orderItemId',
                    'quantity',
                    'subresourceId',
                    'subresourceIdAttributeKey',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'orderItemId' => $o[2],
                        'quantity' => $o[3],
                        'subresourceId' => $o[4],
                        'subresourceIdAttributeKey' => $o[5],
                    ],
                ],
                'groups' => [
                    3 => [
                        'shop:cart:change_quantity',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Cart\\RemoveItemFromCart',
                    'orderTokenValue',
                    'itemId',
                    'orderItemId',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'itemId' => $o[2],
                        'orderItemId' => $o[3],
                    ],
                ],
                'groups' => [
                    3 => [
                        'shop:cart:remove_item',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChoosePaymentMethod',
                    'orderTokenValue',
                    'paymentId',
                    'paymentMethodCode',
                    'subresourceId',
                    'subresourceIdAttributeKey',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'paymentId' => $o[2],
                        'paymentMethodCode' => $o[3],
                        'subresourceId' => $o[4],
                        'subresourceIdAttributeKey' => $o[5],
                    ],
                ],
                'groups' => [
                    3 => [
                        'shop:cart:select_payment_method',
                    ],
                ],
                'serializedName' => [
                    3 => 'paymentMethod',
                ],
            ],
        ],
        $o[0],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ChooseShippingMethod',
                    'orderTokenValue',
                    'shipmentId',
                    'shippingMethodCode',
                    'subresourceId',
                    'subresourceIdAttributeKey',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'shipmentId' => $o[2],
                        'shippingMethodCode' => $o[3],
                        'subresourceId' => $o[4],
                        'subresourceIdAttributeKey' => $o[5],
                    ],
                ],
                'groups' => [
                    3 => [
                        'shop:cart:select_shipping_method',
                    ],
                ],
                'serializedName' => [
                    3 => 'shippingMethod',
                ],
            ],
        ],
        $o[0],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\CompleteOrder',
                    'orderTokenValue',
                    'notes',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'notes' => $o[2],
                    ],
                ],
                'groups' => [
                    2 => [
                        'shop:cart:complete',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\ShipShipment',
                    'shipmentId',
                    'trackingCode',
                ],
                'attributesMetadata' => [
                    [
                        'shipmentId' => $o[1],
                        'trackingCode' => $o[2],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:shipment:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Checkout\\UpdateCart',
                    'orderTokenValue',
                    'email',
                    'billingAddress',
                    'shippingAddress',
                    'couponCode',
                    'localeCode',
                ],
                'attributesMetadata' => [
                    [
                        'orderTokenValue' => $o[1],
                        'email' => $o[2],
                        'billingAddress' => $o[3],
                        'shippingAddress' => $o[4],
                        'couponCode' => $o[5],
                        'localeCode' => $o[6],
                    ],
                ],
                'groups' => [
                    2 => [
                        'shop:cart:update',
                    ],
                    [
                        'shop:cart:update',
                    ],
                    [
                        'shop:cart:update',
                    ],
                    [
                        'shop:cart:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\Promotion\\GeneratePromotionCoupon',
                    'promotionCode',
                    'prefix',
                    'codeLength',
                    'suffix',
                    'amount',
                    'expiresAt',
                    'usageLimit',
                ],
                'attributesMetadata' => [
                    [
                        'promotionCode' => $o[1],
                        'prefix' => $o[2],
                        'codeLength' => $o[3],
                        'suffix' => $o[4],
                        'amount' => $o[5],
                        'expiresAt' => $o[6],
                        'usageLimit' => $o[7],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:promotion_coupon:generate',
                    ],
                    [
                        'admin:promotion_coupon:generate',
                    ],
                    [
                        'admin:promotion_coupon:generate',
                    ],
                    [
                        'admin:promotion_coupon:generate',
                    ],
                    [
                        'admin:promotion_coupon:generate',
                    ],
                    [
                        'admin:promotion_coupon:generate',
                    ],
                    [
                        'admin:promotion_coupon:generate',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\ApiBundle\\Command\\SendContactRequest',
                    'localeCode',
                    'channelCode',
                    'email',
                    'message',
                ],
                'attributesMetadata' => [
                    [
                        'localeCode' => $o[1],
                        'channelCode' => $o[2],
                        'email' => $o[3],
                        'message' => $o[4],
                    ],
                ],
                'groups' => [
                    3 => [
                        'shop:contact_request:create',
                    ],
                    [
                        'shop:contact_request:create',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\Country',
                    'id',
                    'code',
                    'provinces',
                    'enabled',
                    'name',
                    'province',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'provinces' => $o[3],
                        'enabled' => $o[4],
                        'name' => $o[5],
                        'province' => $o[6],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:country:read',
                    ],
                    [
                        'admin:country:read',
                        'admin:country:create',
                        'shop:country:read',
                    ],
                    [
                        'admin:country:read',
                        'admin:country:create',
                        'admin:country:update',
                        'shop:country:read',
                    ],
                    [
                        'admin:country:read',
                        'admin:country:create',
                        'admin:country:update',
                    ],
                    [
                        'admin:country:read',
                        'shop:country:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Currency\\Model\\Currency',
                    'id',
                    'code',
                    'createdAt',
                    'updatedAt',
                    'name',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'createdAt' => $o[3],
                        'updatedAt' => $o[4],
                        'name' => $o[5],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:currency:read',
                        'admin:currency:create',
                        'shop:currency:read',
                    ],
                    5 => [
                        'admin:currency:read',
                        'shop:currency:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Customer',
                    'orders',
                    'defaultAddress',
                    'addresses',
                    'user',
                    'id',
                    'email',
                    'emailCanonical',
                    'firstName',
                    'lastName',
                    'birthday',
                    'gender',
                    'group',
                    'phoneNumber',
                    'subscribedToNewsletter',
                    'createdAt',
                    'updatedAt',
                    'address',
                    'fullName',
                    'male',
                    'female',
                ],
                'attributesMetadata' => [
                    [
                        'orders' => $o[1],
                        'defaultAddress' => $o[2],
                        'addresses' => $o[3],
                        'user' => $o[4],
                        'id' => $o[5],
                        'email' => $o[6],
                        'emailCanonical' => $o[7],
                        'firstName' => $o[8],
                        'lastName' => $o[9],
                        'birthday' => $o[10],
                        'gender' => $o[11],
                        'group' => $o[12],
                        'phoneNumber' => $o[13],
                        'subscribedToNewsletter' => $o[14],
                        'createdAt' => $o[15],
                        'updatedAt' => $o[16],
                        'address' => $o[17],
                        'fullName' => $o[18],
                        'male' => $o[19],
                        'female' => $o[20],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:customer:read',
                        'shop:customer:read',
                        'shop:customer:update',
                    ],
                    4 => [
                        'admin:customer:create',
                        'admin:customer:update',
                        'admin:customer:read',
                        'shop:customer:read',
                    ],
                    [
                        'admin:customer:read',
                    ],
                    [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                        'shop:customer:read',
                        'shop:customer:update',
                    ],
                    8 => [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                        'shop:customer:read',
                        'shop:customer:update',
                    ],
                    [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                        'shop:customer:read',
                        'shop:customer:update',
                    ],
                    [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                    ],
                    [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                        'shop:customer:read',
                        'shop:customer:update',
                    ],
                    [
                        'admin:customer:create',
                        'admin:customer:update',
                        'admin:customer:read',
                    ],
                    [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                    ],
                    [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                        'shop:customer:read',
                        'shop:customer:update',
                    ],
                    [
                        'admin:customer:read',
                    ],
                    18 => [
                        'admin:customer:read',
                        'shop:customer:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                    'id',
                    'code',
                    'name',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'name' => $o[3],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:customer_group:read',
                    ],
                    [
                        'admin:customer_group:read',
                        'admin:customer_group:create',
                    ],
                    [
                        'admin:customer_group:read',
                        'admin:customer_group:create',
                        'admin:customer_group:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Customer\\Statistics\\CustomerStatistics',
                    'perChannelsStatistics',
                    'allOrdersCount',
                ],
                'attributesMetadata' => [
                    [
                        'perChannelsStatistics' => $o[1],
                        'allOrdersCount' => $o[2],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:customer:statistics:read',
                    ],
                    [
                        'admin:customer:statistics:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                    'id',
                    'ratio',
                    'sourceCurrency',
                    'targetCurrency',
                    'createdAt',
                    'updatedAt',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'ratio' => $o[2],
                        'sourceCurrency' => $o[3],
                        'targetCurrency' => $o[4],
                        'createdAt' => $o[5],
                        'updatedAt' => $o[6],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:exchange_rate:read',
                        'shop:exchange_rate:read',
                    ],
                    [
                        'admin:exchange_rate:create',
                        'admin:exchange_rate:read',
                        'admin:exchange_rate:update',
                        'shop:exchange_rate:read',
                    ],
                    [
                        'admin:exchange_rate:create',
                        'admin:exchange_rate:read',
                        'shop:exchange_rate:read',
                    ],
                    [
                        'admin:exchange_rate:create',
                        'admin:exchange_rate:read',
                        'shop:exchange_rate:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig',
                    'id',
                    'factoryName',
                    'gatewayName',
                    'config',
                    'decryptedConfig',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'factoryName' => $o[2],
                        'gatewayName' => $o[3],
                        'config' => $o[4],
                        'decryptedConfig' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:gateway_config:read',
                    ],
                    [
                        'admin:gateway_config:read',
                        'admin:payment_method:create',
                    ],
                    [
                        'admin:gateway_config:read',
                        'admin:payment_method:create',
                    ],
                    [
                        'admin:gateway_config:read',
                        'admin:payment_method:create',
                        'admin:payment_method:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Locale\\Model\\Locale',
                    'id',
                    'code',
                    'createdAt',
                    'updatedAt',
                    'name',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'createdAt' => $o[3],
                        'updatedAt' => $o[4],
                        'name' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:locale:read',
                    ],
                    [
                        'admin:locale:read',
                        'admin:locale:create',
                        'shop:locale:read',
                    ],
                    5 => [
                        'admin:locale:read',
                        'shop:locale:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Order',
                    'customer',
                    'channel',
                    'shippingAddress',
                    'billingAddress',
                    'payments',
                    'shipments',
                    'currencyCode',
                    'localeCode',
                    'promotionCoupon',
                    'checkoutState',
                    'paymentState',
                    'shippingState',
                    'promotions',
                    'tokenValue',
                    'customerIp',
                    'createdByGuest',
                    'id',
                    'checkoutCompletedAt',
                    'number',
                    'notes',
                    'items',
                    'itemsTotal',
                    'adjustments',
                    'adjustmentsTotal',
                    'total',
                    'state',
                    'createdAt',
                    'updatedAt',
                    'customerWithAuthorization',
                    'user',
                    'itemUnits',
                    'payment',
                    'lastPayment',
                    'shippingRequired',
                    'shipment',
                    'promotionSubjectTotal',
                    'promotionSubjectCount',
                    'itemsSubtotal',
                    'promotion',
                    'taxTotal',
                    'shippingTaxTotal',
                    'taxExcludedTotal',
                    'taxIncludedTotal',
                    'shippingTotal',
                    'orderPromotionTotal',
                    'shippingPromotionTotal',
                    'nonDiscountedItemsTotal',
                    'checkoutCompleted',
                    'item',
                    'totalQuantity',
                    'empty',
                    'adjustmentsRecursively',
                    'adjustment',
                    'adjustmentsTotalRecursively',
                ],
                'attributesMetadata' => [
                    [
                        'customer' => $o[1],
                        'channel' => $o[2],
                        'shippingAddress' => $o[3],
                        'billingAddress' => $o[4],
                        'payments' => $o[5],
                        'shipments' => $o[6],
                        'currencyCode' => $o[7],
                        'localeCode' => $o[8],
                        'promotionCoupon' => $o[9],
                        'checkoutState' => $o[10],
                        'paymentState' => $o[11],
                        'shippingState' => $o[12],
                        'promotions' => $o[13],
                        'tokenValue' => $o[14],
                        'customerIp' => $o[15],
                        'createdByGuest' => $o[16],
                        'id' => $o[17],
                        'checkoutCompletedAt' => $o[18],
                        'number' => $o[19],
                        'notes' => $o[20],
                        'items' => $o[21],
                        'itemsTotal' => $o[22],
                        'adjustments' => $o[23],
                        'adjustmentsTotal' => $o[24],
                        'total' => $o[25],
                        'state' => $o[26],
                        'createdAt' => $o[27],
                        'updatedAt' => $o[28],
                        'customerWithAuthorization' => $o[29],
                        'user' => $o[30],
                        'itemUnits' => $o[31],
                        'payment' => $o[32],
                        'lastPayment' => $o[33],
                        'shippingRequired' => $o[34],
                        'shipment' => $o[35],
                        'promotionSubjectTotal' => $o[36],
                        'promotionSubjectCount' => $o[37],
                        'itemsSubtotal' => $o[38],
                        'promotion' => $o[39],
                        'taxTotal' => $o[40],
                        'shippingTaxTotal' => $o[41],
                        'taxExcludedTotal' => $o[42],
                        'taxIncludedTotal' => $o[43],
                        'shippingTotal' => $o[44],
                        'orderPromotionTotal' => $o[45],
                        'shippingPromotionTotal' => $o[46],
                        'nonDiscountedItemsTotal' => $o[47],
                        'checkoutCompleted' => $o[48],
                        'item' => $o[49],
                        'totalQuantity' => $o[50],
                        'empty' => $o[51],
                        'adjustmentsRecursively' => $o[52],
                        'adjustment' => $o[53],
                        'adjustmentsTotalRecursively' => $o[54],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:order:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:order:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'shop:order:account:read',
                        'shop:cart:read',
                        'admin:order:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:cart:update',
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    10 => [
                        'shop:order:account:read',
                        'shop:cart:read',
                        'admin:order:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                    ],
                    14 => [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:order:read',
                    ],
                    17 => [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:order:read',
                    ],
                    19 => [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:order:read',
                    ],
                    [
                        'admin:order:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:read',
                        'shop:order:account:read',
                    ],
                    25 => [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:order:read',
                    ],
                    38 => [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:read',
                        'shop:order:account:read',
                    ],
                    40 => [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:order:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\OrderItem',
                    'version',
                    'variant',
                    'productName',
                    'variantName',
                    'id',
                    'order',
                    'quantity',
                    'unitPrice',
                    'originalUnitPrice',
                    'total',
                    'immutable',
                    'units',
                    'unitsTotal',
                    'adjustments',
                    'adjustmentsTotal',
                    'product',
                    'taxTotal',
                    'discountedUnitPrice',
                    'fullDiscountedUnitPrice',
                    'subtotal',
                    'adjustmentsRecursively',
                    'adjustmentsTotalRecursively',
                    'unit',
                    'adjustment',
                ],
                'attributesMetadata' => [
                    [
                        'version' => $o[1],
                        'variant' => $o[2],
                        'productName' => $o[3],
                        'variantName' => $o[4],
                        'id' => $o[5],
                        'order' => $o[6],
                        'quantity' => $o[7],
                        'unitPrice' => $o[8],
                        'originalUnitPrice' => $o[9],
                        'total' => $o[10],
                        'immutable' => $o[11],
                        'units' => $o[12],
                        'unitsTotal' => $o[13],
                        'adjustments' => $o[14],
                        'adjustmentsTotal' => $o[15],
                        'product' => $o[16],
                        'taxTotal' => $o[17],
                        'discountedUnitPrice' => $o[18],
                        'fullDiscountedUnitPrice' => $o[19],
                        'subtotal' => $o[20],
                        'adjustmentsRecursively' => $o[21],
                        'adjustmentsTotalRecursively' => $o[22],
                        'unit' => $o[23],
                        'adjustment' => $o[24],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:order_item:read',
                    ],
                    5 => [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order_item:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:order_item:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:order_item:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:order_item:read',
                        'shop:cart:read',
                    ],
                    12 => [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:order_item:read',
                    ],
                    14 => [
                        'admin:order_item:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order_item:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order_item:read',
                        'shop:order_item:read',
                    ],
                    18 => [
                        'shop:order_item:read',
                        'shop:cart:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:order_item:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:order_item:read',
                        'shop:cart:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order_item:read',
                        'shop:order_item:read',
                    ],
                    [
                        'admin:order_item:read',
                        'shop:order_item:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\OrderItemUnit',
                    'shipment',
                    'id',
                    'adjustments',
                    'adjustmentsTotal',
                    'orderItem',
                    'createdAt',
                    'updatedAt',
                    'stockable',
                    'shippable',
                    'taxTotal',
                    'total',
                    'adjustment',
                ],
                'attributesMetadata' => [
                    [
                        'shipment' => $o[1],
                        'id' => $o[2],
                        'adjustments' => $o[3],
                        'adjustmentsTotal' => $o[4],
                        'orderItem' => $o[5],
                        'createdAt' => $o[6],
                        'updatedAt' => $o[7],
                        'stockable' => $o[8],
                        'shippable' => $o[9],
                        'taxTotal' => $o[10],
                        'total' => $o[11],
                        'adjustment' => $o[12],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:order_item_unit:read',
                        'shop:order_item_unit:read',
                    ],
                    9 => [
                        'admin:order_item_unit:read',
                        'shop:order_item_unit:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Payment',
                    'order',
                    'id',
                    'method',
                    'currencyCode',
                    'amount',
                    'state',
                    'details',
                    'createdAt',
                    'updatedAt',
                ],
                'attributesMetadata' => [
                    [
                        'order' => $o[1],
                        'id' => $o[2],
                        'method' => $o[3],
                        'currencyCode' => $o[4],
                        'amount' => $o[5],
                        'state' => $o[6],
                        'details' => $o[7],
                        'createdAt' => $o[8],
                        'updatedAt' => $o[9],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:payment:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:payment:read',
                        'shop:cart:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:payment:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:payment:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:payment:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:payment:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:payment:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:payment:read',
                        'shop:payment:read',
                    ],
                    [
                        'admin:payment:read',
                        'shop:payment:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\PaymentMethod',
                    'channels',
                    'gatewayConfig',
                    'id',
                    'code',
                    'environment',
                    'position',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'channel',
                    'translationClass',
                    'name',
                    'description',
                    'instructions',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'channels' => $o[1],
                        'gatewayConfig' => $o[2],
                        'id' => $o[3],
                        'code' => $o[4],
                        'environment' => $o[5],
                        'position' => $o[6],
                        'createdAt' => $o[7],
                        'updatedAt' => $o[8],
                        'enabled' => $o[9],
                        'translations' => $o[10],
                        'translationsCache' => $o[11],
                        'currentLocale' => $o[12],
                        'currentTranslation' => $o[13],
                        'fallbackLocale' => $o[14],
                        'channel' => $o[15],
                        'translationClass' => $o[16],
                        'name' => $o[17],
                        'description' => $o[18],
                        'instructions' => $o[19],
                        'translation' => $o[20],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:payment_method:create',
                        'admin:payment_method:read',
                        'admin:payment_method:update',
                    ],
                    [
                        'admin:payment_method:read',
                        'admin:payment_method:create',
                        'admin:payment_method:update',
                    ],
                    [
                        'admin:payment_method:read',
                        'shop:payment_method:read',
                    ],
                    [
                        'admin:payment_method:read',
                        'admin:payment_method:create',
                        'shop:payment_method:read',
                    ],
                    6 => [
                        'admin:payment_method:read',
                        'admin:payment_method:create',
                        'admin:payment_method:update',
                        'shop:payment_method:read',
                    ],
                    9 => [
                        'admin:payment_method:create',
                        'admin:payment_method:read',
                        'admin:payment_method:update',
                    ],
                    [
                        'admin:payment:read',
                        'admin:payment_method:create',
                        'admin:payment_method:read',
                        'admin:payment_method:update',
                        'shop:order:account:read',
                        'shop:payment:read',
                    ],
                    17 => [
                        'shop:payment_method:read',
                    ],
                    [
                        'shop:payment_method:read',
                    ],
                    [
                        'shop:payment_method:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
                    'id',
                    'name',
                    'description',
                    'instructions',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'description' => $o[3],
                        'instructions' => $o[4],
                        'locale' => $o[5],
                        'translatable' => $o[6],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:payment_method:read',
                    ],
                    [
                        'admin:payment:read',
                        'admin:payment_method:create',
                        'admin:payment_method:read',
                        'admin:payment_method:update',
                        'shop:order:account:read',
                        'shop:payment:read',
                        'shop:payment_method:read',
                    ],
                    [
                        'admin:payment_method:create',
                        'admin:payment_method:read',
                        'admin:payment_method:update',
                        'shop:payment_method:read',
                    ],
                    [
                        'admin:payment_method:create',
                        'admin:payment_method:read',
                        'admin:payment_method:update',
                        'shop:payment_method:read',
                    ],
                    [
                        'admin:payment_method:create',
                        'admin:payment_method:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Customer\\Statistics\\PerChannelCustomerStatistics',
                    'ordersCount',
                    'ordersValue',
                    'channel',
                    'averageOrderValue',
                ],
                'attributesMetadata' => [
                    [
                        'ordersCount' => $o[1],
                        'ordersValue' => $o[2],
                        'channel' => $o[3],
                        'averageOrderValue' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:customer:statistics:read',
                    ],
                    [
                        'admin:customer:statistics:read',
                    ],
                    [
                        'admin:customer:statistics:read',
                    ],
                    [
                        'admin:customer:statistics:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Product',
                    'variantSelectionMethod',
                    'productTaxons',
                    'channels',
                    'mainTaxon',
                    'reviews',
                    'averageRating',
                    'images',
                    'id',
                    'code',
                    'attributes',
                    'variants',
                    'options',
                    'associations',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'variantSelectionMethodChoice',
                    'variantSelectionMethodLabel',
                    'productTaxon',
                    'taxons',
                    'taxon',
                    'channel',
                    'shortDescription',
                    'acceptedReviews',
                    'image',
                    'variantSelectionMethodLabels',
                    'translation',
                    'name',
                    'description',
                    'slug',
                    'descriptor',
                    'metaKeywords',
                    'metaDescription',
                    'attribute',
                    'attributeByCodeAndLocale',
                    'variant',
                    'enabledVariants',
                    'option',
                    'association',
                    'simple',
                    'configurable',
                    'notEmptyAttributeByCodeAndLocale',
                ],
                'attributesMetadata' => [
                    [
                        'variantSelectionMethod' => $o[1],
                        'productTaxons' => $o[2],
                        'channels' => $o[3],
                        'mainTaxon' => $o[4],
                        'reviews' => $o[5],
                        'averageRating' => $o[6],
                        'images' => $o[7],
                        'id' => $o[8],
                        'code' => $o[9],
                        'attributes' => $o[10],
                        'variants' => $o[11],
                        'options' => $o[12],
                        'associations' => $o[13],
                        'createdAt' => $o[14],
                        'updatedAt' => $o[15],
                        'enabled' => $o[16],
                        'translations' => $o[17],
                        'translationsCache' => $o[18],
                        'currentLocale' => $o[19],
                        'currentTranslation' => $o[20],
                        'fallbackLocale' => $o[21],
                        'variantSelectionMethodChoice' => $o[22],
                        'variantSelectionMethodLabel' => $o[23],
                        'productTaxon' => $o[24],
                        'taxons' => $o[25],
                        'taxon' => $o[26],
                        'channel' => $o[27],
                        'shortDescription' => $o[28],
                        'acceptedReviews' => $o[29],
                        'image' => $o[30],
                        'variantSelectionMethodLabels' => $o[31],
                        'translation' => $o[32],
                        'name' => $o[33],
                        'description' => $o[34],
                        'slug' => $o[35],
                        'descriptor' => $o[36],
                        'metaKeywords' => $o[37],
                        'metaDescription' => $o[38],
                        'attribute' => $o[39],
                        'attributeByCodeAndLocale' => $o[40],
                        'variant' => $o[41],
                        'enabledVariants' => $o[42],
                        'option' => $o[43],
                        'association' => $o[44],
                        'simple' => $o[45],
                        'configurable' => $o[46],
                        'notEmptyAttributeByCodeAndLocale' => $o[47],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product:read',
                        'admin:product:create',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                    ],
                    28 => [
                        'shop:product:read',
                    ],
                    33 => [
                        'shop:product:read',
                    ],
                    [
                        'shop:product:read',
                    ],
                    [
                        'shop:product:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAssociation',
                    'id',
                    'type',
                    'owner',
                    'associatedProducts',
                    'createdAt',
                    'updatedAt',
                    'associatedProduct',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'owner' => $o[3],
                        'associatedProducts' => $o[4],
                        'createdAt' => $o[5],
                        'updatedAt' => $o[6],
                        'associatedProduct' => $o[7],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:product_association:read',
                    ],
                    [
                        'admin:product_association:read',
                        'admin:product_association:create',
                        'shop:product_association:read',
                    ],
                    [
                        'admin:product_association:read',
                        'admin:product_association:create',
                    ],
                    [
                        'admin:product_association:read',
                        'admin:product_association:create',
                        'admin:product_association:update',
                        'shop:product_association:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                    'id',
                    'code',
                    'name',
                    'createdAt',
                    'updatedAt',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'name' => $o[3],
                        'createdAt' => $o[4],
                        'updatedAt' => $o[5],
                        'translations' => $o[6],
                        'translationsCache' => $o[7],
                        'currentLocale' => $o[8],
                        'currentTranslation' => $o[9],
                        'fallbackLocale' => $o[10],
                        'translation' => $o[11],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_association_type:read',
                        'shop:product_association_type:read',
                    ],
                    [
                        'admin:product_association_type:read',
                        'admin:product_association_type:create',
                        'shop:product_association_type:read',
                    ],
                    [
                        'admin:product_association_type:read',
                        'shop:product_association_type:read',
                    ],
                    [
                        'admin:product_association_type:read',
                        'shop:product_association_type:read',
                    ],
                    [
                        'admin:product_association_type:read',
                        'shop:product_association_type:read',
                    ],
                    [
                        'admin:product_association_type:read',
                        'admin:product_association_type:create',
                        'admin:product_association_type:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
                    'id',
                    'name',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'locale' => $o[3],
                        'translatable' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_association_type:read',
                    ],
                    [
                        'admin:product_association_type:read',
                        'admin:product_association_type:create',
                        'admin:product_association_type:update',
                    ],
                    [
                        'admin:product_association_type:create',
                        'admin:product_association_type:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAttribute',
                    'id',
                    'code',
                    'type',
                    'configuration',
                    'storageType',
                    'position',
                    'translatable',
                    'createdAt',
                    'updatedAt',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'name',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'type' => $o[3],
                        'configuration' => $o[4],
                        'storageType' => $o[5],
                        'position' => $o[6],
                        'translatable' => $o[7],
                        'createdAt' => $o[8],
                        'updatedAt' => $o[9],
                        'translations' => $o[10],
                        'translationsCache' => $o[11],
                        'currentLocale' => $o[12],
                        'currentTranslation' => $o[13],
                        'fallbackLocale' => $o[14],
                        'name' => $o[15],
                        'translation' => $o[16],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:product_attribute:read',
                    ],
                    [
                        'shop:product_attribute:read',
                        'admin:product_attribute:read',
                        'admin:product_attribute:create',
                    ],
                    [
                        'shop:product_attribute:read',
                        'admin:product_attribute:read',
                        'admin:product_attribute:create',
                    ],
                    [
                        'admin:product_attribute:read',
                        'admin:product_attribute:create',
                        'admin:product_attribute:update',
                    ],
                    [
                        'admin:product_attribute:read',
                    ],
                    [
                        'shop:product_attribute:read',
                        'admin:product_attribute:read',
                        'admin:product_attribute:update',
                    ],
                    [
                        'admin:product_attribute:read',
                        'admin:product_attribute:create',
                        'admin:product_attribute:update',
                    ],
                    10 => [
                        'admin:product_attribute:read',
                        'admin:product_attribute:create',
                        'admin:product_attribute:update',
                    ],
                    15 => [
                        'shop:product_attribute:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation',
                    'id',
                    'name',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'locale' => $o[3],
                        'translatable' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'shop:product_attribute:read',
                        'admin:product_attribute:read',
                    ],
                    [
                        'shop:product_attribute:read',
                        'admin:product_attribute:read',
                        'admin:product_attribute:create',
                        'admin:product_attribute:update',
                    ],
                    [
                        'admin:product_attribute:create',
                        'admin:product_attribute:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductAttributeValue',
                    'id',
                    'subject',
                    'attribute',
                    'localeCode',
                    'product',
                    'value',
                    'name',
                    'type',
                    'code',
                    'text',
                    'boolean',
                    'integer',
                    'float',
                    'datetime',
                    'date',
                    'json',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'subject' => $o[2],
                        'attribute' => $o[3],
                        'localeCode' => $o[4],
                        'product' => $o[5],
                        'value' => $o[6],
                        'name' => $o[7],
                        'type' => $o[8],
                        'code' => $o[9],
                        'text' => $o[10],
                        'boolean' => $o[11],
                        'integer' => $o[12],
                        'float' => $o[13],
                        'datetime' => $o[14],
                        'date' => $o[15],
                        'json' => $o[16],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product:read',
                        'shop:product_attribute_value:read',
                    ],
                    3 => [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product_attribute_value:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product_attribute_value:read',
                    ],
                    6 => [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product_attribute_value:read',
                    ],
                    [
                        'shop:product_attribute_value:read',
                    ],
                    [
                        'shop:product_attribute_value:read',
                    ],
                    [
                        'shop:product_attribute_value:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductImage',
                    'productVariants',
                    'id',
                    'type',
                    'file',
                    'path',
                    'owner',
                    'productVariant',
                ],
                'attributesMetadata' => [
                    [
                        'productVariants' => $o[1],
                        'id' => $o[2],
                        'type' => $o[3],
                        'file' => $o[4],
                        'path' => $o[5],
                        'owner' => $o[6],
                        'productVariant' => $o[7],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_image:read',
                        'admin:product_image:update',
                        'admin:product:read',
                    ],
                    [
                        'admin:product_image:read',
                        'shop:product_image:read',
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product_image:read',
                        'admin:product_image:update',
                        'shop:product_image:read',
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    5 => [
                        'admin:product_image:read',
                        'shop:product_image:read',
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product_image:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOption',
                    'id',
                    'code',
                    'position',
                    'values',
                    'createdAt',
                    'updatedAt',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'name',
                    'value',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'position' => $o[3],
                        'values' => $o[4],
                        'createdAt' => $o[5],
                        'updatedAt' => $o[6],
                        'translations' => $o[7],
                        'translationsCache' => $o[8],
                        'currentLocale' => $o[9],
                        'currentTranslation' => $o[10],
                        'fallbackLocale' => $o[11],
                        'name' => $o[12],
                        'value' => $o[13],
                        'translation' => $o[14],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_option:read',
                        'shop:product_option:read',
                    ],
                    [
                        'admin:product_option:read',
                        'admin:product_option:create',
                        'shop:product_option:read',
                    ],
                    4 => [
                        'admin:product_option:read',
                        'admin:product_option:create',
                        'admin:product_option:update',
                        'shop:product_option:read',
                    ],
                    [
                        'admin:product_option:read',
                        'shop:product_option:read',
                    ],
                    [
                        'admin:product_option:read',
                        'shop:product_option:read',
                    ],
                    [
                        'admin:product_option:read',
                        'admin:product_option:create',
                        'admin:product_option:update',
                    ],
                    12 => [
                        'admin:product_option:read',
                        'shop:product_option:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
                    'id',
                    'name',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'locale' => $o[3],
                        'translatable' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_option:read',
                    ],
                    [
                        'admin:product_option:read',
                        'admin:product_option:create',
                        'admin:product_option:update',
                    ],
                    [
                        'admin:product_option:create',
                        'admin:product_option:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                    'id',
                    'code',
                    'option',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'value',
                    'optionCode',
                    'name',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'option' => $o[3],
                        'translations' => $o[4],
                        'translationsCache' => $o[5],
                        'currentLocale' => $o[6],
                        'currentTranslation' => $o[7],
                        'fallbackLocale' => $o[8],
                        'value' => $o[9],
                        'optionCode' => $o[10],
                        'name' => $o[11],
                        'translation' => $o[12],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_option_value:read',
                        'shop:product_option_value:read',
                    ],
                    [
                        'admin:product_option:create',
                        'admin:product_option:update',
                        'admin:product_option_value:read',
                        'admin:product_option_value:write',
                        'shop:product_option_value:read',
                    ],
                    [
                        'admin:product_option_value:read',
                        'shop:product_option_value:read',
                    ],
                    [
                        'admin:product_option:create',
                        'admin:product_option:update',
                        'admin:product_option_value:read',
                        'admin:product_option_value:write',
                    ],
                    9 => [
                        'admin:product_option_value:read',
                        'shop:product_option_value:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
                    'id',
                    'value',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'value' => $o[2],
                        'locale' => $o[3],
                        'translatable' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_option_value:read',
                    ],
                    [
                        'admin:product_option:create',
                        'admin:product_option:update',
                        'admin:product_option_value:read',
                        'admin:product_option_value:write',
                    ],
                    [
                        'admin:product_option:create',
                        'admin:product_option:update',
                        'admin:product_option_value:write',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductReview',
                    'id',
                    'title',
                    'rating',
                    'comment',
                    'author',
                    'status',
                    'reviewSubject',
                    'createdAt',
                    'updatedAt',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'title' => $o[2],
                        'rating' => $o[3],
                        'comment' => $o[4],
                        'author' => $o[5],
                        'status' => $o[6],
                        'reviewSubject' => $o[7],
                        'createdAt' => $o[8],
                        'updatedAt' => $o[9],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_review:read',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'admin:product_review:update',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'admin:product_review:update',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'admin:product_review:update',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'shop:product_review:read',
                    ],
                    [
                        'admin:product_review:read',
                        'shop:product_review:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductTaxon',
                    'id',
                    'product',
                    'taxon',
                    'position',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'product' => $o[2],
                        'taxon' => $o[3],
                        'position' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_taxon:read',
                        'shop:product_taxon:read',
                    ],
                    [
                        'admin:product_taxon:read',
                        'admin:product_taxon:update',
                        'admin:product_taxon:create',
                        'shop:product_taxon:read',
                    ],
                    [
                        'admin:product_taxon:read',
                        'admin:product_taxon:update',
                        'admin:product_taxon:create',
                        'shop:product_taxon:read',
                    ],
                    [
                        'admin:product_taxon:read',
                        'admin:product_taxon:update',
                        'admin:product_taxon:create',
                        'shop:product_taxon:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductTranslation',
                    'id',
                    'name',
                    'slug',
                    'description',
                    'metaKeywords',
                    'metaDescription',
                    'locale',
                    'translatable',
                    'shortDescription',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'slug' => $o[3],
                        'description' => $o[4],
                        'metaKeywords' => $o[5],
                        'metaDescription' => $o[6],
                        'locale' => $o[7],
                        'translatable' => $o[8],
                        'shortDescription' => $o[9],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product:read',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                    [
                        'admin:product:create',
                        'admin:product:update',
                    ],
                    9 => [
                        'admin:product:read',
                        'admin:product:create',
                        'admin:product:update',
                        'shop:product:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ProductVariant',
                    'version',
                    'onHold',
                    'onHand',
                    'tracked',
                    'weight',
                    'width',
                    'height',
                    'depth',
                    'taxCategory',
                    'shippingCategory',
                    'channelPricings',
                    'shippingRequired',
                    'images',
                    'id',
                    'code',
                    'product',
                    'optionValues',
                    'position',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'inStock',
                    'inventoryName',
                    'shippingWeight',
                    'shippingWidth',
                    'shippingHeight',
                    'shippingDepth',
                    'shippingVolume',
                    'channelPricingForChannel',
                    'channelPricing',
                    'image',
                    'name',
                    'descriptor',
                    'optionValue',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'version' => $o[1],
                        'onHold' => $o[2],
                        'onHand' => $o[3],
                        'tracked' => $o[4],
                        'weight' => $o[5],
                        'width' => $o[6],
                        'height' => $o[7],
                        'depth' => $o[8],
                        'taxCategory' => $o[9],
                        'shippingCategory' => $o[10],
                        'channelPricings' => $o[11],
                        'shippingRequired' => $o[12],
                        'images' => $o[13],
                        'id' => $o[14],
                        'code' => $o[15],
                        'product' => $o[16],
                        'optionValues' => $o[17],
                        'position' => $o[18],
                        'createdAt' => $o[19],
                        'updatedAt' => $o[20],
                        'enabled' => $o[21],
                        'translations' => $o[22],
                        'translationsCache' => $o[23],
                        'currentLocale' => $o[24],
                        'currentTranslation' => $o[25],
                        'fallbackLocale' => $o[26],
                        'inStock' => $o[27],
                        'inventoryName' => $o[28],
                        'shippingWeight' => $o[29],
                        'shippingWidth' => $o[30],
                        'shippingHeight' => $o[31],
                        'shippingDepth' => $o[32],
                        'shippingVolume' => $o[33],
                        'channelPricingForChannel' => $o[34],
                        'channelPricing' => $o[35],
                        'image' => $o[36],
                        'name' => $o[37],
                        'descriptor' => $o[38],
                        'optionValue' => $o[39],
                        'translation' => $o[40],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    15 => [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'shop:product_variant:read',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'shop:product_variant:read',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                        'shop:product_variant:read',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                    ],
                    [
                        'admin:product_variant:read',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                    37 => [
                        'shop:product_variant:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Product\\Model\\ProductVariantTranslation',
                    'id',
                    'name',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'locale' => $o[3],
                        'translatable' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:product_variant:read',
                        'admin:order:read',
                        'shop:product_variant:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:product_variant:read',
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                        'admin:order:read',
                        'shop:product_variant:read',
                        'shop:order:account:read',
                    ],
                    [
                        'admin:product_variant:create',
                        'admin:product_variant:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Promotion',
                    'channels',
                    'id',
                    'code',
                    'name',
                    'description',
                    'priority',
                    'exclusive',
                    'usageLimit',
                    'used',
                    'startsAt',
                    'endsAt',
                    'couponBased',
                    'coupons',
                    'rules',
                    'actions',
                    'appliesToDiscounted',
                    'createdAt',
                    'updatedAt',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'channel',
                    'coupon',
                    'rule',
                    'action',
                    'label',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'channels' => $o[1],
                        'id' => $o[2],
                        'code' => $o[3],
                        'name' => $o[4],
                        'description' => $o[5],
                        'priority' => $o[6],
                        'exclusive' => $o[7],
                        'usageLimit' => $o[8],
                        'used' => $o[9],
                        'startsAt' => $o[10],
                        'endsAt' => $o[11],
                        'couponBased' => $o[12],
                        'coupons' => $o[13],
                        'rules' => $o[14],
                        'actions' => $o[15],
                        'appliesToDiscounted' => $o[16],
                        'createdAt' => $o[17],
                        'updatedAt' => $o[18],
                        'translations' => $o[19],
                        'translationsCache' => $o[20],
                        'currentLocale' => $o[21],
                        'currentTranslation' => $o[22],
                        'fallbackLocale' => $o[23],
                        'channel' => $o[24],
                        'coupon' => $o[25],
                        'rule' => $o[26],
                        'action' => $o[27],
                        'label' => $o[28],
                        'translation' => $o[29],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionAction',
                    'id',
                    'type',
                    'configuration',
                    'promotion',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'configuration' => $o[3],
                        'promotion' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\PromotionCoupon',
                    'perCustomerUsageLimit',
                    'reusableFromCancelledOrders',
                    'id',
                    'code',
                    'usageLimit',
                    'used',
                    'promotion',
                    'expiresAt',
                    'createdAt',
                    'updatedAt',
                    'valid',
                ],
                'attributesMetadata' => [
                    [
                        'perCustomerUsageLimit' => $o[1],
                        'reusableFromCancelledOrders' => $o[2],
                        'id' => $o[3],
                        'code' => $o[4],
                        'usageLimit' => $o[5],
                        'used' => $o[6],
                        'promotion' => $o[7],
                        'expiresAt' => $o[8],
                        'createdAt' => $o[9],
                        'updatedAt' => $o[10],
                        'valid' => $o[11],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:promotion_coupon:read',
                        'admin:promotion_coupon:create',
                        'admin:promotion_coupon:update',
                    ],
                    [
                        'admin:promotion_coupon:read',
                        'admin:promotion_coupon:create',
                        'admin:promotion_coupon:update',
                    ],
                    4 => [
                        'admin:promotion_coupon:read',
                        'admin:promotion_coupon:create',
                    ],
                    [
                        'admin:promotion_coupon:read',
                        'admin:promotion_coupon:create',
                        'admin:promotion_coupon:update',
                    ],
                    [
                        'admin:promotion_coupon:read',
                    ],
                    [
                        'admin:promotion_coupon:read',
                        'admin:promotion_coupon:create',
                    ],
                    [
                        'admin:promotion_coupon:read',
                        'admin:promotion_coupon:create',
                        'admin:promotion_coupon:update',
                    ],
                    [
                        'admin:promotion_coupon:read',
                    ],
                    [
                        'admin:promotion_coupon:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionRule',
                    'id',
                    'type',
                    'configuration',
                    'promotion',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'configuration' => $o[3],
                        'promotion' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Promotion\\Model\\PromotionTranslation',
                    'id',
                    'label',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'label' => $o[2],
                        'locale' => $o[3],
                        'translatable' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:promotion:read',
                    ],
                    [
                        'admin:promotion:read',
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                    [
                        'admin:promotion:create',
                        'admin:promotion:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\Province',
                    'id',
                    'code',
                    'name',
                    'abbreviation',
                    'country',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'name' => $o[3],
                        'abbreviation' => $o[4],
                        'country' => $o[5],
                    ],
                ],
                'groups' => [
                    2 => [
                        'admin:country:create',
                        'admin:country:update',
                        'shop:country:read',
                        'admin:province:read',
                    ],
                    [
                        'admin:country:create',
                        'admin:country:update',
                        'shop:country:read',
                        'admin:province:read',
                        'admin:province:update',
                    ],
                    [
                        'admin:country:create',
                        'admin:country:update',
                        'admin:province:read',
                        'admin:province:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Shipment',
                    'order',
                    'adjustments',
                    'adjustmentsTotal',
                    'id',
                    'state',
                    'method',
                    'units',
                    'tracking',
                    'shippedAt',
                    'createdAt',
                    'updatedAt',
                    'adjustment',
                    'shippingUnitTotal',
                    'unit',
                    'tracked',
                    'shippables',
                    'shippingWeight',
                    'shippingVolume',
                    'shippingUnitCount',
                ],
                'attributesMetadata' => [
                    [
                        'order' => $o[1],
                        'adjustments' => $o[2],
                        'adjustmentsTotal' => $o[3],
                        'id' => $o[4],
                        'state' => $o[5],
                        'method' => $o[6],
                        'units' => $o[7],
                        'tracking' => $o[8],
                        'shippedAt' => $o[9],
                        'createdAt' => $o[10],
                        'updatedAt' => $o[11],
                        'adjustment' => $o[12],
                        'shippingUnitTotal' => $o[13],
                        'unit' => $o[14],
                        'tracked' => $o[15],
                        'shippables' => $o[16],
                        'shippingWeight' => $o[17],
                        'shippingVolume' => $o[18],
                        'shippingUnitCount' => $o[19],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:shipment:read',
                        'shop:shipment:read',
                    ],
                    4 => [
                        'admin:order:read',
                        'admin:shipment:read',
                        'shop:cart:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:shipment:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:order:read',
                        'admin:shipment:read',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:shipment:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:shipment:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:shipment:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:shipment:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:shipment:read',
                        'shop:shipment:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                    'id',
                    'code',
                    'name',
                    'description',
                    'createdAt',
                    'updatedAt',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'name' => $o[3],
                        'description' => $o[4],
                        'createdAt' => $o[5],
                        'updatedAt' => $o[6],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:shipping_category:read',
                    ],
                    [
                        'admin:shipping_category:read',
                        'admin:shipping_category:create',
                    ],
                    [
                        'admin:shipping_category:read',
                        'admin:shipping_category:update',
                        'admin:shipping_category:create',
                    ],
                    [
                        'admin:shipping_category:read',
                        'admin:shipping_category:update',
                        'admin:shipping_category:create',
                    ],
                    [
                        'admin:shipping_category:read',
                    ],
                    [
                        'admin:shipping_category:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ShippingMethod',
                    'zone',
                    'taxCategory',
                    'channels',
                    'id',
                    'code',
                    'position',
                    'category',
                    'categoryRequirement',
                    'calculator',
                    'configuration',
                    'rules',
                    'archivedAt',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'channel',
                    'translationClass',
                    'name',
                    'description',
                    'rule',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'zone' => $o[1],
                        'taxCategory' => $o[2],
                        'channels' => $o[3],
                        'id' => $o[4],
                        'code' => $o[5],
                        'position' => $o[6],
                        'category' => $o[7],
                        'categoryRequirement' => $o[8],
                        'calculator' => $o[9],
                        'configuration' => $o[10],
                        'rules' => $o[11],
                        'archivedAt' => $o[12],
                        'createdAt' => $o[13],
                        'updatedAt' => $o[14],
                        'enabled' => $o[15],
                        'translations' => $o[16],
                        'translationsCache' => $o[17],
                        'currentLocale' => $o[18],
                        'currentTranslation' => $o[19],
                        'fallbackLocale' => $o[20],
                        'channel' => $o[21],
                        'translationClass' => $o[22],
                        'name' => $o[23],
                        'description' => $o[24],
                        'rule' => $o[25],
                        'translation' => $o[26],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                    ],
                    3 => [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                    ],
                    [
                        'admin:shipping_method:read',
                        'shop:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'shop:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                        'shop:shipping_method:read',
                    ],
                    9 => [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                    ],
                    [
                        'admin:shipping_method:read',
                        'admin:shipping_method:create',
                        'admin:shipping_method:update',
                    ],
                    [
                        'admin:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                    ],
                    23 => [
                        'shop:shipping_method:read',
                    ],
                    [
                        'shop:shipping_method:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingMethodRule',
                    'id',
                    'type',
                    'configuration',
                    'shippingMethod',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'configuration' => $o[3],
                        'shippingMethod' => $o[4],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:read',
                        'admin:shipping_method:create',
                        'admin:shipping_method:update',
                    ],
                    [
                        'admin:shipping_method:read',
                        'admin:shipping_method:create',
                        'admin:shipping_method:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
                    'id',
                    'name',
                    'description',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'description' => $o[3],
                        'locale' => $o[4],
                        'translatable' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                        'shop:cart:read',
                        'shop:order:account:read',
                        'shop:shipping_method:read',
                        'shop:shipment:read',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:read',
                        'admin:shipping_method:update',
                        'shop:shipping_method:read',
                    ],
                    [
                        'admin:shipping_method:create',
                        'admin:shipping_method:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ShopBillingData',
                    'id',
                    'company',
                    'taxId',
                    'countryCode',
                    'street',
                    'city',
                    'postcode',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'company' => $o[2],
                        'taxId' => $o[3],
                        'countryCode' => $o[4],
                        'street' => $o[5],
                        'city' => $o[6],
                        'postcode' => $o[7],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:shop_billing_data:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel:update',
                        'admin:shop_billing_data:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel:update',
                        'admin:shop_billing_data:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel:update',
                        'admin:shop_billing_data:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel:update',
                        'admin:shop_billing_data:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel:update',
                        'admin:shop_billing_data:read',
                    ],
                    [
                        'admin:channel:create',
                        'admin:channel:update',
                        'admin:shop_billing_data:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\ShopUser',
                    'customer',
                    'id',
                    'username',
                    'usernameCanonical',
                    'salt',
                    'password',
                    'plainPassword',
                    'lastLogin',
                    'emailVerificationToken',
                    'passwordResetToken',
                    'passwordRequestedAt',
                    'verifiedAt',
                    'locked',
                    'expiresAt',
                    'credentialsExpireAt',
                    'roles',
                    'oauthAccounts',
                    'email',
                    'emailCanonical',
                    'encoderName',
                    'createdAt',
                    'updatedAt',
                    'enabled',
                    'verified',
                    'userIdentifier',
                    'credentialsNonExpired',
                    'accountNonExpired',
                    'accountNonLocked',
                    'role',
                    'passwordRequestNonExpired',
                    'oAuthAccounts',
                    'passwordHasherName',
                    'expired',
                ],
                'attributesMetadata' => [
                    [
                        'customer' => $o[1],
                        'id' => $o[2],
                        'username' => $o[3],
                        'usernameCanonical' => $o[4],
                        'salt' => $o[5],
                        'password' => $o[6],
                        'plainPassword' => $o[7],
                        'lastLogin' => $o[8],
                        'emailVerificationToken' => $o[9],
                        'passwordResetToken' => $o[10],
                        'passwordRequestedAt' => $o[11],
                        'verifiedAt' => $o[12],
                        'locked' => $o[13],
                        'expiresAt' => $o[14],
                        'credentialsExpireAt' => $o[15],
                        'roles' => $o[16],
                        'oauthAccounts' => $o[17],
                        'email' => $o[18],
                        'emailCanonical' => $o[19],
                        'encoderName' => $o[20],
                        'createdAt' => $o[21],
                        'updatedAt' => $o[22],
                        'enabled' => $o[23],
                        'verified' => $o[24],
                        'userIdentifier' => $o[25],
                        'credentialsNonExpired' => $o[26],
                        'accountNonExpired' => $o[27],
                        'accountNonLocked' => $o[28],
                        'role' => $o[29],
                        'passwordRequestNonExpired' => $o[30],
                        'oAuthAccounts' => $o[31],
                        'passwordHasherName' => $o[32],
                        'expired' => $o[33],
                    ],
                ],
                'groups' => [
                    7 => [
                        'admin:customer:create',
                        'admin:customer:update',
                    ],
                    12 => [
                        'admin:customer:create',
                        'admin:customer:update',
                    ],
                    23 => [
                        'admin:customer:create',
                        'admin:customer:read',
                        'admin:customer:update',
                    ],
                    [
                        'admin:customer:read',
                        'shop:customer:read',
                    ],
                ],
                'serializedName' => [
                    12 => 'verified',
                ],
            ],
        ],
        $o[0],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                    'id',
                    'code',
                    'name',
                    'description',
                    'rates',
                    'createdAt',
                    'updatedAt',
                    'rate',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'name' => $o[3],
                        'description' => $o[4],
                        'rates' => $o[5],
                        'createdAt' => $o[6],
                        'updatedAt' => $o[7],
                        'rate' => $o[8],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:tax_category:read',
                    ],
                    [
                        'admin:tax_category:create',
                        'admin:tax_category:read',
                    ],
                    [
                        'admin:tax_category:create',
                        'admin:tax_category:read',
                        'admin:tax_category:update',
                    ],
                    [
                        'admin:tax_category:create',
                        'admin:tax_category:read',
                        'admin:tax_category:update',
                    ],
                    6 => [
                        'admin:tax_category:read',
                    ],
                    [
                        'admin:tax_category:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxation\\Model\\TaxRate',
                    'id',
                    'code',
                    'category',
                    'name',
                    'amount',
                    'includedInPrice',
                    'calculator',
                    'startDate',
                    'endDate',
                    'createdAt',
                    'updatedAt',
                    'amountAsPercentage',
                    'label',
                    'zone',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'category' => $o[3],
                        'name' => $o[4],
                        'amount' => $o[5],
                        'includedInPrice' => $o[6],
                        'calculator' => $o[7],
                        'startDate' => $o[8],
                        'endDate' => $o[9],
                        'createdAt' => $o[10],
                        'updatedAt' => $o[11],
                        'amountAsPercentage' => $o[12],
                        'label' => $o[13],
                        'zone' => $o[14],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:tax_rate:read',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                    [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                    [
                        'admin:tax_rate:read',
                    ],
                    [
                        'admin:tax_rate:read',
                    ],
                    14 => [
                        'admin:tax_rate:read',
                        'admin:tax_rate:create',
                        'admin:tax_rate:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\Taxon',
                    'images',
                    'id',
                    'code',
                    'root',
                    'parent',
                    'children',
                    'left',
                    'right',
                    'level',
                    'position',
                    'translations',
                    'translationsCache',
                    'currentLocale',
                    'currentTranslation',
                    'fallbackLocale',
                    'enabled',
                    'createdAt',
                    'updatedAt',
                    'image',
                    'translationClass',
                    'name',
                    'slug',
                    'description',
                    'ancestors',
                    'child',
                    'enabledChildren',
                    'fullname',
                    'translation',
                ],
                'attributesMetadata' => [
                    [
                        'images' => $o[1],
                        'id' => $o[2],
                        'code' => $o[3],
                        'root' => $o[4],
                        'parent' => $o[5],
                        'children' => $o[6],
                        'left' => $o[7],
                        'right' => $o[8],
                        'level' => $o[9],
                        'position' => $o[10],
                        'translations' => $o[11],
                        'translationsCache' => $o[12],
                        'currentLocale' => $o[13],
                        'currentTranslation' => $o[14],
                        'fallbackLocale' => $o[15],
                        'enabled' => $o[16],
                        'createdAt' => $o[17],
                        'updatedAt' => $o[18],
                        'image' => $o[19],
                        'translationClass' => $o[20],
                        'name' => $o[21],
                        'slug' => $o[22],
                        'description' => $o[23],
                        'ancestors' => $o[24],
                        'child' => $o[25],
                        'enabledChildren' => $o[26],
                        'fullname' => $o[27],
                        'translation' => $o[28],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:taxon:read',
                    ],
                    [
                        'admin:taxon:read',
                        'shop:taxon:read',
                    ],
                    [
                        'admin:taxon:read',
                        'shop:taxon:read',
                        'admin:taxon:create',
                    ],
                    5 => [
                        'admin:taxon:read',
                        'admin:taxon:create',
                        'admin:taxon:update',
                    ],
                    [
                        'admin:taxon:read',
                        'shop:taxon:read',
                    ],
                    10 => [
                        'admin:taxon:read',
                        'admin:taxon:update',
                    ],
                    [
                        'admin:taxon:read',
                        'admin:taxon:create',
                        'admin:taxon:update',
                    ],
                    16 => [
                        'admin:taxon:read',
                        'admin:taxon:create',
                        'admin:taxon:update',
                    ],
                    21 => [
                        'shop:taxon:read',
                    ],
                    [
                        'shop:taxon:read',
                    ],
                    [
                        'shop:taxon:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Core\\Model\\TaxonImage',
                    'id',
                    'type',
                    'file',
                    'path',
                    'owner',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'file' => $o[3],
                        'path' => $o[4],
                        'owner' => $o[5],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:taxon_image:read',
                        'admin:taxon:read',
                    ],
                    [
                        'admin:taxon_image:read',
                        'admin:taxon_image:update',
                        'admin:taxon:read',
                    ],
                    4 => [
                        'admin:taxon_image:read',
                        'admin:taxon:read',
                    ],
                    [
                        'admin:taxon_image:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                    'id',
                    'name',
                    'slug',
                    'description',
                    'locale',
                    'translatable',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'slug' => $o[3],
                        'description' => $o[4],
                        'locale' => $o[5],
                        'translatable' => $o[6],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:taxon:read',
                        'shop:taxon:read',
                        'admin:taxon_translation:read',
                        'shop:taxon_translation:read',
                    ],
                    [
                        'admin:taxon:read',
                        'shop:taxon:read',
                        'admin:taxon_translation:read',
                        'shop:taxon_translation:read',
                        'admin:taxon:create',
                        'admin:taxon:update',
                    ],
                    [
                        'admin:taxon:read',
                        'shop:taxon:read',
                        'admin:taxon_translation:read',
                        'shop:taxon_translation:read',
                        'admin:taxon:create',
                        'admin:taxon:update',
                    ],
                    [
                        'admin:taxon:read',
                        'shop:taxon:read',
                        'admin:taxon_translation:read',
                        'shop:taxon_translation:read',
                        'admin:taxon:create',
                        'admin:taxon:update',
                    ],
                    [
                        'admin:taxon:create',
                        'admin:taxon:update',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\Zone',
                    'id',
                    'code',
                    'name',
                    'type',
                    'scope',
                    'members',
                    'types',
                    'member',
                    'createdAt',
                    'updatedAt',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'name' => $o[3],
                        'type' => $o[4],
                        'scope' => $o[5],
                        'members' => $o[6],
                        'types' => $o[7],
                        'member' => $o[8],
                        'createdAt' => $o[9],
                        'updatedAt' => $o[10],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:zone:read',
                    ],
                    [
                        'admin:zone:create',
                        'admin:zone:read',
                    ],
                    [
                        'admin:zone:create',
                        'admin:zone:read',
                        'admin:zone:update',
                    ],
                    [
                        'admin:zone:create',
                        'admin:zone:read',
                    ],
                    [
                        'admin:zone:create',
                        'admin:zone:read',
                    ],
                    [
                        'admin:zone:create',
                        'admin:zone:read',
                        'admin:zone:update',
                    ],
                    9 => [
                        'admin:zone:read',
                    ],
                    [
                        'admin:zone:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sylius\\Component\\Addressing\\Model\\ZoneMember',
                    'id',
                    'code',
                    'belongsTo',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'code' => $o[2],
                        'belongsTo' => $o[3],
                    ],
                ],
                'groups' => [
                    1 => [
                        'admin:zone_member:read',
                    ],
                    [
                        'admin:zone:create',
                        'admin:zone:update',
                        'admin:zone_member:read',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
