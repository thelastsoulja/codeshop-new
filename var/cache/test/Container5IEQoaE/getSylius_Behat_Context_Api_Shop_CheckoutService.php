<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSylius_Behat_Context_Api_Shop_CheckoutService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'sylius.behat.context.api.shop.checkout' shared service.
     *
     * @return \Sylius\Behat\Context\Api\Shop\CheckoutContext
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/behat/behat/src/Behat/Behat/Context/Context.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Context/Api/Shop/CheckoutContext.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Service/SharedStorageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Service/SharedStorage.php';

        return $container->services['sylius.behat.context.api.shop.checkout'] = new \Sylius\Behat\Context\Api\Shop\CheckoutContext(($container->privates['sylius.behat.api_platform_client.shop'] ?? $container->load('getSylius_Behat_ApiPlatformClient_ShopService')), ($container->privates['Sylius\\Behat\\Client\\ResponseCheckerInterface'] ?? $container->load('getResponseCheckerInterfaceService')), ($container->services['sylius.repository.shipping_method'] ?? $container->getSylius_Repository_ShippingMethodService()), ($container->services['sylius.repository.order'] ?? $container->getSylius_Repository_OrderService()), ($container->services['sylius.repository.payment_method'] ?? $container->getSylius_Repository_PaymentMethodService()), ($container->services['Sylius\\Component\\Product\\Resolver\\ProductVariantResolverInterface'] ?? $container->getProductVariantResolverInterfaceService()), ($container->services['api_platform.iri_converter'] ?? $container->getApiPlatform_IriConverterService()), ($container->privates['sylius.behat.shared_storage'] ?? ($container->privates['sylius.behat.shared_storage'] = new \Sylius\Behat\Service\SharedStorage())), ($container->privates['sylius.behat.request_factory'] ?? $container->load('getSylius_Behat_RequestFactoryService')), 'Sylius\\Component\\Core\\Model\\PaymentMethod', 'Sylius\\Component\\Core\\Model\\ShippingMethod');
    }
}
