<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_EventDispatcher_NewApiShopUserService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'security.event_dispatcher.new_api_shop_user' shared service.
     *
     * @return \Symfony\Component\EventDispatcher\EventDispatcher
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->privates['security.event_dispatcher.new_api_shop_user'] = $instance = new \Symfony\Component\EventDispatcher\EventDispatcher();

        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.new_api_shop_user.user_provider'] ?? $container->load('getSecurity_Listener_NewApiShopUser_UserProviderService'));
        }, 1 => 'checkPassport'], 2048);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.user_checker.new_api_shop_user'] ?? $container->load('getSecurity_Listener_UserChecker_NewApiShopUserService'));
        }, 1 => 'preCheckCredentials'], 256);
        $instance->addListener('security.authentication.success', [0 => function () use ($container) {
            return ($container->privates['security.listener.user_checker.new_api_shop_user'] ?? $container->load('getSecurity_Listener_UserChecker_NewApiShopUserService'));
        }, 1 => 'postCheckCredentials'], 256);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.user_provider'] ?? $container->load('getSecurity_Listener_UserProviderService'));
        }, 1 => 'checkPassport'], 1024);
        $instance->addListener('security.interactive_login', [0 => function () use ($container) {
            return ($container->privates['sylius.admin_user.listener.update_user_encoder'] ?? $container->load('getSylius_AdminUser_Listener_UpdateUserEncoderService'));
        }, 1 => 'onSecurityInteractiveLogin'], 0);
        $instance->addListener('security.interactive_login', [0 => function () use ($container) {
            return ($container->privates['sylius.shop_user.listener.update_user_encoder'] ?? $container->load('getSylius_ShopUser_Listener_UpdateUserEncoderService'));
        }, 1 => 'onSecurityInteractiveLogin'], 0);
        $instance->addListener('security.interactive_login', [0 => function () use ($container) {
            return ($container->services['sylius.listener.shop_cart_blamer'] ?? $container->load('getSylius_Listener_ShopCartBlamerService'));
        }, 1 => 'onInteractiveLogin'], 0);
        $instance->addListener('security.interactive_login', [0 => function () use ($container) {
            return ($container->services['sylius.listener.user_cart_recalculation'] ?? $container->load('getSylius_Listener_UserCartRecalculationService'));
        }, 1 => 'recalculateCartWhileLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () use ($container) {
            return ($container->privates['Sylius\\Bundle\\ApiBundle\\EventListener\\ApiCartBlamerListener'] ?? $container->load('getApiCartBlamerListenerService'));
        }, 1 => 'onLoginSuccess'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.check_authenticator_credentials'] ?? $container->load('getSecurity_Listener_CheckAuthenticatorCredentialsService'));
        }, 1 => 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.password_migrating'] ?? $container->load('getSecurity_Listener_PasswordMigratingService'));
        }, 1 => 'onLoginSuccess'], 0);
        $instance->addListener('security.interactive_login', [0 => function () use ($container) {
            return ($container->privates['sylius.listener.admin_user_last_login'] ?? $container->load('getSylius_Listener_AdminUserLastLoginService'));
        }, 1 => 'onSecurityInteractiveLogin'], 0);
        $instance->addListener('security.interactive_login', [0 => function () use ($container) {
            return ($container->privates['sylius.listener.shop_user_last_login'] ?? $container->load('getSylius_Listener_ShopUserLastLoginService'));
        }, 1 => 'onSecurityInteractiveLogin'], 0);
        $instance->addListener('security.interactive_login', [0 => function () use ($container) {
            return ($container->privates['sylius.listener.oauth_user_last_login'] ?? $container->load('getSylius_Listener_OauthUserLastLoginService'));
        }, 1 => 'onSecurityInteractiveLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () use ($container) {
            return ($container->privates['security.listener.csrf_protection'] ?? $container->load('getSecurity_Listener_CsrfProtectionService'));
        }, 1 => 'checkPassport'], 512);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () use ($container) {
            return ($container->privates['security.logout.listener.csrf_token_clearing'] ?? $container->load('getSecurity_Logout_Listener_CsrfTokenClearingService'));
        }, 1 => 'onLogout'], 0);

        return $instance;
    }
}
