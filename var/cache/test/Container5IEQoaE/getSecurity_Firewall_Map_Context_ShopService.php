<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_Map_Context_ShopService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'security.firewall.map.context.shop' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security/FirewallContext.php';

        $a = ($container->privates['security.exception_listener.shop'] ?? $container->load('getSecurity_ExceptionListener_ShopService'));

        if (isset($container->privates['security.firewall.map.context.shop'])) {
            return $container->privates['security.firewall.map.context.shop'];
        }
        $b = ($container->privates['security.logout_listener.shop'] ?? $container->load('getSecurity_LogoutListener_ShopService'));

        if (isset($container->privates['security.firewall.map.context.shop'])) {
            return $container->privates['security.firewall.map.context.shop'];
        }

        return $container->privates['security.firewall.map.context.shop'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['security.channel_listener'] ?? $container->load('getSecurity_ChannelListenerService'));
            yield 1 => ($container->privates['security.context_listener.1'] ?? $container->getSecurity_ContextListener_1Service());
            yield 2 => ($container->privates['debug.security.firewall.authenticator.shop'] ?? $container->load('getDebug_Security_Firewall_Authenticator_ShopService'));
            yield 3 => ($container->privates['security.authentication.switchuser_listener.shop'] ?? $container->load('getSecurity_Authentication_SwitchuserListener_ShopService'));
            yield 4 => ($container->privates['security.access_listener'] ?? $container->load('getSecurity_AccessListenerService'));
        }, 5), $a, $b, ($container->privates['security.firewall.map.config.shop'] ?? $container->load('getSecurity_Firewall_Map_Config_ShopService')));
    }
}
