<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_Manager_NewApiAdminUserService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'security.authenticator.manager.new_api_admin_user' shared service.
     *
     * @return \Symfony\Component\Security\Http\Authentication\AuthenticatorManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticatorManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/UserAuthenticatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticatorManager.php';

        $a = ($container->privates['security.authenticator.jwt.new_api_admin_user'] ?? $container->load('getSecurity_Authenticator_Jwt_NewApiAdminUserService'));

        if (isset($container->privates['security.authenticator.manager.new_api_admin_user'])) {
            return $container->privates['security.authenticator.manager.new_api_admin_user'];
        }
        $b = ($container->privates['security.authenticator.json_login.new_api_admin_user'] ?? $container->load('getSecurity_Authenticator_JsonLogin_NewApiAdminUserService'));

        if (isset($container->privates['security.authenticator.manager.new_api_admin_user'])) {
            return $container->privates['security.authenticator.manager.new_api_admin_user'];
        }
        $c = ($container->privates['security.event_dispatcher.new_api_admin_user'] ?? $container->load('getSecurity_EventDispatcher_NewApiAdminUserService'));

        if (isset($container->privates['security.authenticator.manager.new_api_admin_user'])) {
            return $container->privates['security.authenticator.manager.new_api_admin_user'];
        }

        return $container->privates['security.authenticator.manager.new_api_admin_user'] = new \Symfony\Component\Security\Http\Authentication\AuthenticatorManager([0 => $a, 1 => $b], ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService()), $c, 'new_api_admin_user', ($container->privates['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService()), true, true, []);
    }
}
