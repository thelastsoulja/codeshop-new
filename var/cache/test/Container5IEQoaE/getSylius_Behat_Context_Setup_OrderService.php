<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSylius_Behat_Context_Setup_OrderService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'sylius.behat.context.setup.order' shared service.
     *
     * @return \Sylius\Behat\Context\Setup\OrderContext
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/behat/behat/src/Behat/Behat/Context/Context.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Context/Setup/OrderContext.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Service/SharedStorageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Service/SharedStorage.php';

        return $container->services['sylius.behat.context.setup.order'] = new \Sylius\Behat\Context\Setup\OrderContext(($container->privates['sylius.behat.shared_storage'] ?? ($container->privates['sylius.behat.shared_storage'] = new \Sylius\Behat\Service\SharedStorage())), ($container->services['sylius.custom_factory.order'] ?? $container->getSylius_CustomFactory_OrderService()), ($container->services['sylius.factory.address'] ?? $container->load('getSylius_Factory_AddressService')), ($container->services['sylius.factory.customer'] ?? ($container->services['sylius.factory.customer'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Customer'))), ($container->services['sylius.factory.cart_item'] ?? $container->load('getSylius_Factory_CartItemService')), ($container->services['sylius.factory.shipment'] ?? ($container->services['sylius.factory.shipment'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Shipment'))), ($container->services['SM\\Factory\\FactoryInterface'] ?? $container->getFactoryInterfaceService()), ($container->services['sylius.repository.country'] ?? $container->load('getSylius_Repository_CountryService')), ($container->services['sylius.repository.customer'] ?? $container->load('getSylius_Repository_CustomerService')), ($container->services['sylius.repository.order'] ?? $container->getSylius_Repository_OrderService()), ($container->services['sylius.repository.payment_method'] ?? $container->getSylius_Repository_PaymentMethodService()), ($container->services['sylius.repository.shipping_method'] ?? $container->getSylius_Repository_ShippingMethodService()), ($container->services['Sylius\\Component\\Product\\Resolver\\ProductVariantResolverInterface'] ?? $container->getProductVariantResolverInterfaceService()), ($container->services['sylius.order_item_quantity_modifier.limiting'] ?? $container->load('getSylius_OrderItemQuantityModifier_LimitingService')), ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService()), ($container->privates['Sylius\\Calendar\\Provider\\DateTimeProviderInterface'] ?? ($container->privates['Sylius\\Calendar\\Provider\\DateTimeProviderInterface'] = new \Sylius\Calendar\Tests\Behat\Provider\FakeCalendar(\dirname(__DIR__, 4)))));
    }
}
