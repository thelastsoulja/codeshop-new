<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSylius_RegistryPromotionRuleCheckerService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'sylius.registry_promotion_rule_checker' shared service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Promotion/Checker/Rule/RuleCheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Promotion/Checker/Rule/CartQuantityRuleChecker.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Core/Promotion/Checker/Rule/CustomerGroupRuleChecker.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Core/Promotion/Checker/Rule/HasTaxonRuleChecker.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Core/Promotion/Checker/Rule/ContainsProductRuleChecker.php';

        $container->services['sylius.registry_promotion_rule_checker'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Promotion\\Checker\\Rule\\RuleCheckerInterface', 'rule checker');

        $instance->register('cart_quantity', ($container->services['sylius.promotion_rule_checker.cart_quantity'] ?? ($container->services['sylius.promotion_rule_checker.cart_quantity'] = new \Sylius\Component\Promotion\Checker\Rule\CartQuantityRuleChecker())));
        $instance->register('customer_group', ($container->privates['sylius.promotion_rule_checker.customer_group'] ?? ($container->privates['sylius.promotion_rule_checker.customer_group'] = new \Sylius\Component\Core\Promotion\Checker\Rule\CustomerGroupRuleChecker())));
        $instance->register('nth_order', ($container->services['sylius.promotion_rule_checker.nth_order'] ?? $container->load('getSylius_PromotionRuleChecker_NthOrderService')));
        $instance->register('shipping_country', ($container->services['sylius.promotion_rule_checker.shipping_country'] ?? $container->load('getSylius_PromotionRuleChecker_ShippingCountryService')));
        $instance->register('has_taxon', ($container->services['sylius.promotion_rule_checker.has_taxon'] ?? ($container->services['sylius.promotion_rule_checker.has_taxon'] = new \Sylius\Component\Core\Promotion\Checker\Rule\HasTaxonRuleChecker())));
        $instance->register('total_of_items_from_taxon', ($container->services['sylius.promotion_rule_checker.total_of_items_from_taxon'] ?? $container->load('getSylius_PromotionRuleChecker_TotalOfItemsFromTaxonService')));
        $instance->register('contains_product', ($container->services['sylius.promotion_rule_checker.contains_product'] ?? ($container->services['sylius.promotion_rule_checker.contains_product'] = new \Sylius\Component\Core\Promotion\Checker\Rule\ContainsProductRuleChecker())));
        $instance->register('item_total', ($container->services['sylius.promotion_rule_checker.item_total'] ?? $container->load('getSylius_PromotionRuleChecker_ItemTotalService')));

        return $instance;
    }
}
