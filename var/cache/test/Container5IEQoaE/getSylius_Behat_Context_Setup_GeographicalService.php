<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSylius_Behat_Context_Setup_GeographicalService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'sylius.behat.context.setup.geographical' shared service.
     *
     * @return \Sylius\Behat\Context\Setup\GeographicalContext
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/behat/behat/src/Behat/Behat/Context/Context.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Context/Setup/GeographicalContext.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Service/SharedStorageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Service/SharedStorage.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Addressing/Converter/CountryNameConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Addressing/Converter/CountryNameConverter.php';

        return $container->services['sylius.behat.context.setup.geographical'] = new \Sylius\Behat\Context\Setup\GeographicalContext(($container->privates['sylius.behat.shared_storage'] ?? ($container->privates['sylius.behat.shared_storage'] = new \Sylius\Behat\Service\SharedStorage())), ($container->services['sylius.factory.country'] ?? ($container->services['sylius.factory.country'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Addressing\\Model\\Country'))), ($container->services['sylius.factory.province'] ?? ($container->services['sylius.factory.province'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Addressing\\Model\\Province'))), ($container->services['sylius.repository.country'] ?? $container->load('getSylius_Repository_CountryService')), ($container->services['sylius.converter.country_name'] ?? ($container->services['sylius.converter.country_name'] = new \Sylius\Component\Addressing\Converter\CountryNameConverter())), ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService()), ($container->services['sylius.repository.province'] ?? $container->getSylius_Repository_ProvinceService()));
    }
}
