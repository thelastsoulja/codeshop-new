<?php

namespace Container5IEQoaE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSylius_Behat_Context_Setup_TaxonomyService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'sylius.behat.context.setup.taxonomy' shared service.
     *
     * @return \Sylius\Behat\Context\Setup\TaxonomyContext
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/behat/behat/src/Behat/Behat/Context/Context.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Behat/Context/Setup/TaxonomyContext.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Taxonomy/Generator/TaxonSlugGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Sylius/Component/Taxonomy/Generator/TaxonSlugGenerator.php';

        return $container->services['sylius.behat.context.setup.taxonomy'] = new \Sylius\Behat\Context\Setup\TaxonomyContext(($container->services['sylius.repository.taxon'] ?? $container->load('getSylius_Repository_TaxonService')), ($container->services['Sylius\\Component\\Taxonomy\\Factory\\TaxonFactoryInterface'] ?? $container->load('getTaxonFactoryInterfaceService')), ($container->services['sylius.factory.taxon_translation'] ?? ($container->services['sylius.factory.taxon_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation'))), ($container->services['sylius.factory.taxon_image'] ?? ($container->services['sylius.factory.taxon_image'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\TaxonImage'))), ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService()), ($container->services['sylius.image_uploader'] ?? $container->load('getSylius_ImageUploaderService')), ($container->services['sylius.generator.taxon_slug'] ?? ($container->services['sylius.generator.taxon_slug'] = new \Sylius\Component\Taxonomy\Generator\TaxonSlugGenerator())), ($container->services['behat.mink.parameters'] ?? $container->load('getBehat_Mink_ParametersService')));
    }
}
